{% from "alice/hollywood/library/scenarios/weather/nlg/get_weather_nowcast_text_cases_ru.nlg" import render_case, render_error, render_precipitation_type, render_hours %}

{% macro render_pressure_phrase(forecast, is_for_now=false) %}
  давление
  {% if is_for_now %}
    составляет
  {% else %}
    составит
  {% endif %}
  {{ forecast.pressure }} {% tx %}мм рт. ст{% etx %}{% vc %}мм ртутного столба{% evc %}.
{% endmacro %}

{% macro render_wind_strength(speed) %}
  {% if speed < 6 %}
    слабый
  {% elif speed < 15 %}

  {% elif speed < 25 %}
    сильный
  {% else %}
    ураганный
  {% endif %}
{% endmacro %}

{% macro render_wind_phrase(forecast) %}
  {% if forecast.wind_dir == "штиль" or forecast.wind_speed < 1 %}
    штиль
  {% else %}
    {{ render_wind_strength(forecast.wind_speed) }}
    {{ forecast.wind_dir }}
    ветер
  {% endif %}

  , {{ forecast.wind_speed | round(0) }} м/с
  {% if forecast.wind_gust >= 10 %}
    с порывами до
    {{ forecast.wind_gust | round(0) }} м/с
  {% endif %}
{% endmacro %}

{% macro render_wind_precaution(forecast, attentions=None) %}
  {% if forecast.wind_gust >= 12 and 'weather_use_wind_precautions' in attentions %}
    {% if forecast.wind_gust < 17 %}
      {% chooseline %}
        Будьте осторожны!
        Будьте аккуратны!
      {% endchooseline %}
    {% elif forecast.wind_gust < 21 %}
      {% chooseline %}
        Будьте предельно осторожны!
        Будьте предельно аккуратны!
      {% endchooseline %}
    {% elif forecast.wind_gust < 25 %}
      {% chooseline %}
        Вам лучше не выходить на улицу!
        Советую вам оставаться дома!
      {% endchooseline %}
    {% else %}
      {% chooseline %}
        Внимание! Такой ветер может быть опасен для жизни!
        Внимание! Выходить на улицу будет опасно для жизни!
      {% endchooseline %}
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro range_attention(attentions) %}
  {% if 'incomplete_forecast' in attentions %}
    \nНа остальные дни у меня пока нет прогноза.
  {% endif %}
{% endmacro %}

{% macro render_short_now_phrase() %}
  # This should be different from the current_weather phrase. See https://st.yandex-team.ru/DIALOG-4922#5d2ed72663890d001d7e5275
  сейчас
{% endmacro %}

{% macro render_now_phrase() %}
  {% chooseline %}
    сейчас
    в настоящее время
    в настоящий момент
    в данный момент
    в данную минуту
  {% endchooseline %}
{% endmacro %}

{% macro temp(grad) %}
  {% if grad > 0 %}
    +{{ grad }}
  {% else %}
    {{ grad }}
  {% endif %}
{% endmacro %}

{% macro min_max_temp(min, max) %}
  {% if min == max %}
    {{ temp(min) }}
  {% elif min < 0 and max < 0 %}
    от {{ temp(max) }} до {{ temp(min) }}
  {% else %}
    от {{ temp(min) }} до {{ temp(max) }}
  {% endif %}
{% endmacro %}

{% macro format_date(date, tz=None, mock_ts=None) %}
  {% set parsed_date = date | parse_dt %}
  {% set parsed_date.tzinfo = tz %}  # date from forecast is already in proper timezone
  {{ parsed_date | human_day_rel(tz, mock_ts) }}
{% endmacro %}

{% macro render_smart_joined(separator, values) %}
    {% for item in values -%}
        {% if item %}
            {% if not loop.first %}{{ separator }}{% endif %}{{ item }}
        {% endif %}
    {%- endfor %}
{% endmacro %}

{% macro render_day_part(day_part) %}
  {% if day_part == "morning" %}
    утром
  {% elif day_part == "day" %}
    днём
  {% elif day_part == "evening" %}
    вечером
  {% elif day_part == "night" %}
    ночью
  {% endif %}
{% endmacro %}

{% macro __render_already_going(precipitation_type, prec_type_asked, same_types_case, different_types_case, default_case) %}
    {% if (prec_type_asked is defined and prec_type_asked and prec_type_asked != None)
            and (precipitation_type is defined and precipitation_type and precipitation_type != None)
            and (prec_type_asked != 'precipitation' and prec_type_asked != 'no_precipitation') %}
        {% if render_precipitation_type(precipitation_type) == render_precipitation_type(prec_type_asked) %}
            {{ same_types_case }}
        {% else %}
            {{ different_types_case }}
        {% endif %}
    {% else %}
        {{ default_case }}
    {% endif %}
{% endmacro %}

{% macro render_tomorrow(day_part, precipitation_change_hours, timestr, tz, mock_ts=None, next=False) %}
    {% if (timestr is none or timestr is not defined) or (tz is none or tz is not defined) %}
      {% if not next %}
        {% if precipitation_change_hours >= 18 %}завтра{% endif %}
      {% endif %}
    {% else %}
      {% set dt = datetime_strptime(timestr, "%Y-%m-%d-%H:%M:%S") %}
      {% set change_time = add_hours(datetime=dt, hours=precipitation_change_hours) %}
      {% set date = format_date(change_time.strftime('%Y-%m-%d'), tz, mock_ts) %}
      {% set local_hour = dt.hour %}

      {% if date == "завтра" %}
        {% if day_part == "night" %}
          {% if local_hour < 5 %}
            завтра
          {% endif %}
        {% else %}
          завтра
        {% endif %}
      {% endif %}
    {% endif %}
{% endmacro %}

{% macro render_continues(next_change, change) %}
  {% if change == next_change %}
    продлится
    {% chooseline %}
       менее часа
       не больше часа
    {% endchooseline %}
  {% else %}
    продлится около {{ render_hours(next_change - change, case='gen') }}
  {% endif %}
{% endmacro %}

{% macro render_precipitation_change_24h(context, type, state, skip_tomorrow_part) %}
  {% if context.precipitation_change_hours == 0 %}
    {% if context.precipitation_current == 0 %}
      {{ render_case(type=type, case='no_rain', state=state) }}
    {% else %}
      {% if context.precipitation_next_change_hours is defined and context.precipitation_next_change_hours is not none %}
        {% if context.expected_change == "prec_ends" %}
          {{ render_precipitation_type(type, case='nom') }} не прекратится в ближайшие 24 часа
        {% else %}
          {% set prec_type_asked = context.prec_type_asked %}
          {% set same_types_case %}
            {{ render_precipitation_type(type, case='nom') }} уже идёт и не прекратится в ближайшие 24 часа
          {% endset %}
          {% set different_types_case %}
            {{ render_precipitation_type(prec_type_asked, case='gen') | capitalize_first }}
            сейчас нет, зато идёт
            {{ render_precipitation_type(type, case='nom') }}.
            Он не прекратится в ближайшие 24 часа
          {% endset %}
          {% set default_case %}
            {{ render_precipitation_type(type, case='nom') }} не прекратится в ближайшие 24 часа
          {% endset %}
          {% if context.expected_change == "prec_starts" %}
            {{ __render_already_going(type, prec_type_asked, same_types_case, different_types_case, default_case) }}
          {% else %}
            {{ same_types_case }}
          {% endif %}
        {% endif %}
      {% else %}
        {{ render_case(type=type, case='only_rain', state=state) }}
      {% endif %}
    {% endif %}
  {% else %}
    {% if context.precipitation_current == 0 %}
      {{ render_precipitation_type(type, case='nom') }} начнётся через {{ render_hours(context.precipitation_change_hours) }}
      {% if context.precipitation_next_change_hours is defined and context.precipitation_next_change_hours is not none %}
        {% if context.precipitation_next_change_hours == 0 %}
          и не закончится в ближайшие сутки
        {% elif context.precipitation_next_change_hours <= 5 %}
          и {{ render_continues(context.precipitation_next_change_hours, context.precipitation_change_hours) }}
        {% else %}
          и закончится
          {% if not skip_tomorrow_part %}
            {{ render_tomorrow(context.precipitation_next_day_part, context.precipitation_next_change_hours, context.date, context.tz, context.mock_timestamp, next=True) }}
          {% endif %}
          {{ render_day_part(context.precipitation_next_day_part) }}
        {% endif %}
      {% endif %}
    {% else %}
      {% if context.precipitation_next_change_hours is defined and context.precipitation_next_change_hours is not none %}
        {% if context.expected_change == "prec_ends" %}
          {{ render_precipitation_type(type, case='nom') }} закончится через {{ render_hours(context.precipitation_change_hours) }}
        {% else %}
          {% set prec_type_asked = context.prec_type_asked %}
          {% set same_types_case %}
            {{ render_precipitation_type(type, case='nom') }} уже идёт.
            {{ render_continues(context.precipitation_change_hours, 0) | capitalize_first }}
          {% endset %}
          {% set different_types_case %}
            {{ render_precipitation_type(prec_type_asked, case='gen') | capitalize_first }}
            сейчас нет, зато идёт
            {{ render_precipitation_type(type, case='nom') }}.
            {{ render_continues(context.precipitation_change_hours, 0) | capitalize_first }}
          {% endset %}
          {% set default_case %}
            {{ render_precipitation_type(type, case='nom') }}
            {{ render_continues(context.precipitation_change_hours, 0) }}
          {% endset %}
          {% if context.expected_change == "prec_starts" %}
            {{ __render_already_going(type, prec_type_asked, same_types_case, different_types_case, default_case) }}
          {% else %}
            {{ same_types_case }}
          {% endif %}
        {% endif %}
      {% else %}
        {{ render_precipitation_type(type, case='nom') }} кончится через {{ render_hours(context.precipitation_change_hours) }}
      {% endif %}
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro render_asked_date_range(context) %}
  {% if context.when is not defined or not context.when or context.when is none %}
    в ближайшие 10 дней
  {% elif when | get_item('start.weekend') and when | get_item('end.weekend') %}
    в выходные
  {% elif context.when | get_item('start.days_relative')
          and context.when | get_item('end.days_relative')
          and context.when | get_item('start.days') == 0 %}
    в ближайшие {{ data | get_item('days') | length }} {{ 'день' | pluralize(data | get_item('days') | length) | inflect('gen') }}
  {% elif context.when | get_item('start.weeks_relative')
          and context.when | get_item('end.weeks_relative')
          and context.when | get_item('start.weeks') == 0
          and context.when | get_item('end.weeks') == 1 %}
    на этой неделе
  {% elif context.when | get_item('start.weeks_relative')
          and context.when | get_item('end.weeks_relative')
          and context.when | get_item('start.weeks') == 1
          and context.when | get_item('end.weeks') == 2 %}
    на следующей неделе
  {% else %}
    {% set start_date = format_date(context.asked_start.date, context.asked_start.tz, context.mock_timestamp) %}
    {% set end_date = format_date(context.asked_end.date, context.asked_end.tz, context.mock_timestamp) %}
    {% if context.asked_start.date == context.asked_end.date %}
      {{ start_date }}
    {% else %}
      {% if start_date != 'сегодня' %}
        с {{ start_date }}
      {% endif %}
      до {{ end_date }}
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro render_hour_of_day(hours, case='nom') %}
  {% if hours == 0 %}
    {{ 'полночь' | inflect(case) }}
  {% elif hours == 1 %}
    {{ 'час' | inflect(case) }} ночи
  {% elif hours == 2 or hours == 3 %}
    {{ hours }} {{ 'час' | pluralize(hours, case) }} ночи
  {% elif hours < 12 %}
    {{ hours }} {{ 'час' | pluralize(hours, case) }} утра
  {% elif hours == 12 %}
    {{ 'полдень' | inflect(case) }}
  {% elif hours == 13 %}
    {{ 'час' | inflect(case) }} дня
  {% elif hours < 18 %}
    {{ hours % 12 }} {{ 'час' | pluralize(hours % 12, case) }} дня
  {% else %}
    {{ hours % 12 }} {{ 'час' | pluralize(hours % 12, case) }} вечера
  {% endif %}
{% endmacro %}

{% macro render_precipitation_change_10d(context, type, prec_type_asked) %}
  {% if context.prec_start is not defined and context.prec_end is not defined %}
    {% if type is not defined or not type %}
      {% chooseitem %}
        {{ render_asked_date_range(context) }} — без осадков
      {% or %}
        по моим данным, {{ render_asked_date_range(context) }} {{ render_precipitation_type(prec_type_asked, case='gen') }} не будет
      {% or %}
        {{ render_asked_date_range(context) }} {{ render_precipitation_type(prec_type_asked, case='gen') }} не обещали
      {% endchooseitem %}
    {% else %}
      {% chooseitem %}
        {{ render_asked_date_range(context) }} {{ render_precipitation_type(type, case='nom') }} не закончится. Увы
      {% or %}
        по моим данным, {{ render_asked_date_range(context) }} {{ render_precipitation_type(type, case='nom') }} не закончится. Увы
      {% endchooseitem %}
    {% endif %}
  {% else %}
    {{ render_precipitation_type(type, case='nom') }}
    {% if context.prec_start is defined %}
      начнётся
      {% set start_date = format_date(context.prec_start.date, context.prec_start.tz, context.mock_timestamp) %}
      {% if start_date != 'сегодня' %}
        {{ start_date }}
      {% endif %}
      в {{ render_hour_of_day(context.prec_start.hour, case='acc') }} и
    {% elif context.expected_change == "prec_starts" %}
      уже идёт и
    {% endif %}
    {% if context.prec_end is not defined %}
      не закончится в ближайшие 10 дней
    {% else %}
      закончится
      {% if context.prec_start is not defined or context.prec_start.date != context.prec_end.date %}
        {{ format_date(context.prec_end.date, context.prec_end.tz, context.mock_timestamp) }}
      {% endif %}
      в {{ render_hour_of_day(context.prec_end.hour, case='acc') }}
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro render_precipitation_change_day_part(context, type, state, skip_tomorrow_part) %}

  {% if context.precipitation_current == 0 %}
    {% if context.precipitation_next_change_hours is defined and context.precipitation_next_change_hours is not none %}
      {{ render_precipitation_type(type, case='nom') }} начнётся
      {% if not skip_tomorrow_part %}
        {{ render_tomorrow(context.precipitation_day_part, context.precipitation_change_hours, context.date, context.tz, context.mock_timestamp) }}
      {% endif %}
      {{ render_day_part(context.precipitation_day_part) }}
      {% if context.precipitation_next_change_hours == 0 %}
          и не закончится в ближайшие сутки
      {% elif context.precipitation_day_part == context.precipitation_next_day_part %}
          и продлится около {{ render_hours(context.precipitation_next_change_hours - context.precipitation_change_hours, case='gen') }}
      {% else %}
        и закончится
        {% if not skip_tomorrow_part %}
          {{ render_tomorrow(context.precipitation_next_day_part, context.precipitation_next_change_hours, context.date, context.tz, context.mock_timestamp, next=True) }}
        {% endif %}
        {{ render_day_part(context.precipitation_next_day_part) }}
      {% endif %}
    {% else %}
      {% if not skip_tomorrow_part %}
        {{ render_tomorrow(context.precipitation_day_part, context.precipitation_change_hours, context.date, context.tz, context.mock_timestamp) }}
      {% endif %}
      {{ render_day_part(context.precipitation_day_part) }}
      может быть {{ render_precipitation_type(type, case='nom') }}
    {% endif %}
  {% else %}
    {% if context.precipitation_next_change_hours is defined and context.precipitation_next_change_hours is not none %}
      {% if context.expected_change == "prec_ends" %}
        {{ render_precipitation_type(type, case='nom') }} закончится
        {% if not skip_tomorrow_part %}
          {{ render_tomorrow(context.precipitation_day_part, context.precipitation_change_hours, context.date, context.tz, context.mock_timestamp) }}
        {% endif %}
        {{ render_day_part(context.precipitation_day_part) }}
      {% else %}
        {% set prec_type_asked = context.prec_type_asked %}
        {% set same_types_case %}
            {{ render_precipitation_type(type, case='nom') }} уже идёт. Закончится
        {% endset %}
        {% set different_types_case %}
            {{ render_precipitation_type(prec_type_asked, case='gen') | capitalize_first }}
            сейчас нет, зато идёт
            {{ render_precipitation_type(type, case='nom') }}.
            Он закончится
        {% endset %}
        {% set default_case %}
            {{ render_precipitation_type(type, case='nom') }} закончится
        {% endset %}
        {% if context.expected_change == "prec_starts" %}
          {{ __render_already_going(type, prec_type_asked, same_types_case, different_types_case, default_case) }}
        {% else %}
          {{ same_types_case }}
        {% endif %}
        {% if not skip_tomorrow_part %}
          {{ render_tomorrow(context.precipitation_day_part, context.precipitation_change_hours, context.date, context.tz, context.mock_timestamp) }}
        {% endif %}
        {{ render_day_part(context.precipitation_day_part) }}
      {% endif %}
    {% else %}
      {% if not skip_tomorrow_part %}
        {{ render_tomorrow(context.precipitation_day_part, context.precipitation_change_hours, context.date, context.tz, context.mock_timestamp) }}
      {% endif %}
      {{ render_day_part(context.precipitation_day_part) }}
      {{ render_precipitation_type(type, case='nom') }} закончится
    {% endif %}
  {% endif %}

{% endmacro %}

{% macro render_precipitation_for_day_part(context, type, state) %}
  {{ render_day_part(context.day_part) }}

  {% if context.precipitation_current == 0 %}
    {% if context.precipitation_for_day_part == 0 %}
      без {{ render_precipitation_type(type, case='gen') }}
    {% else %}
      может быть {{ render_precipitation_type(type, case='nom') }}
    {% endif %}
  {% else %}
    {% if context.precipitation_for_day_part == 0 %}
      {{ render_precipitation_type(type, case='nom') }} закончится
    {% else %}
      может быть {{ render_precipitation_type(type, case='nom') }}
    {% endif %}
  {% endif %}
{% endmacro %}

{% macro render_debug(context) %}
  day_part: {{ context.day_part }}
  weather_nowcast_alert: {{ context.weather_nowcast_alert }}
  precipitation_for_day_part: {{ context.precipitation_for_day_part }}
  precipitation_change_hours: {{ context.precipitation_change_hours }}
  precipitation_next_day_part: {{ context.precipitation_next_day_part }}
  precipitation_next_change_hours: {{ context.precipitation_next_change_hours }}
  precipitation_current: {{ context.precipitation_current }}
  day_part: {{ context.day_part }}
  debug: {{ context.precipitation_debug }}
{% endmacro %}

{% macro render_nowcast_alert(weather_nowcast_alert, precipitation_current, precipitation_type, expected_change, prec_type_asked) %}
  {% if expected_change == "prec_starts" and precipitation_current == 1 %}
    {% set same_types_case %}
        Вы не поверите — он уже идёт. По моим данным, {{ weather_nowcast_alert | decapitalize_first }}
    {% endset %}
    {% set different_types_case %}
        {{ render_precipitation_type(prec_type_asked, case='gen') | capitalize_first }}
        сейчас нет, зато идёт
        {{ render_precipitation_type(precipitation_type, case='nom') }}.
        По моим данным, {{ weather_nowcast_alert | decapitalize_first }}
    {% endset %}
    {% set default_case %}
        {{ weather_nowcast_alert }}
    {% endset %}
    {{ __render_already_going(precipitation_type, prec_type_asked, same_types_case, different_types_case, default_case) }}
  {% elif expected_change == "prec_starts" and precipitation_current == 0 %}
    {{ weather_nowcast_alert }}
  {% elif expected_change == "prec_ends" and precipitation_current == 1 %}
    {{ weather_nowcast_alert }}
  {% elif expected_change == "prec_ends" and precipitation_current == 0 %}
    Но он сейчас не идёт. По моим данным, {{ weather_nowcast_alert | decapitalize_first }}
  {% else %}
    {{ weather_nowcast_alert }}
  {% endif %}
{% endmacro %}

{% macro render_precipitation(context, skip_tomorrow_part=false) %}
  {% if context.precipitation_type is defined and context.precipitation_type %}
     {% set type = context.precipitation_type %}
  {% else %}
     {% set type = 0 %}
  {% endif %}

  {% if context.set_number is defined and context.set_number %}
    {% set state = context.set_number %}
  {% else %}
    {% set state = 1 %}
  {% endif %}

  {% if context.prec_type_asked is defined and context.prec_type_asked %}
    {% set asked_type = context.prec_type_asked %}
  {% else %}
    {% set asked_type = 0 %}
  {% endif %}

  {% if context.weather_nowcast_alert is defined and context.weather_nowcast_alert is not none %}
    {{ render_nowcast_alert(context.weather_nowcast_alert, context.precipitation_current, type, context.expected_change, asked_type) }}
  {% elif context.precipitation_for_day_part is defined and context.precipitation_for_day_part is not none %}
    {% if context.day_part is defined and context.day_part is not none %}
      {{ render_precipitation_for_day_part(context, type=type, state=state) }}
    {% else %}
      {% if context.precipitation_debug is defined and context.precipitation_debug is not none %}
        {{ render_error("Не знаю часть дня") }}
      {% else %}
        {{ render_error() }}
      {% endif %}
    {% endif %}
  {% elif (context.precipitation_change_hours is not defined or context.precipitation_change_hours is none)
        or (context.precipitation_current is not defined or context.precipitation_current is none) %}
    {% if context.precipitation_debug is defined and context.precipitation_debug is not none %}
      {{ render_error("Не знаю час смены погоды. change_hours = " + (context.precipitation_change_hours | string) + ". current = " + (context.precipitation_current | string)) }}
    {% else %}
      {{ render_error() }}
    {% endif %}
  {% else %}
    {% if context.precipitation_change_hours <= 5 %}
      {{ render_precipitation_change_24h(context, type=type, state=state, skip_tomorrow_part=skip_tomorrow_part) }}
    {% elif context.precipitation_day_part is defined and context.precipitation_day_part %}
      {{ render_precipitation_change_day_part(context, type=type, state=state, skip_tomorrow_part=skip_tomorrow_part) }}
    {% else %}
      {% if context.precipitation_debug is defined and context.precipitation_debug is not none %}
        {{ render_error("Не знаю часть дня перемены погоды") }}
      {% else %}
        {{ render_error() }}
      {% endif %}
    {% endif %}
  {% endif %}
  {% if context.precipitation_debug is defined and context.precipitation_debug is not none %}
    . {{ render_debug(context) }}
  {% endif %}
{% endmacro %}


{% macro geo_changed_attention(context, weather) %}
  {% set original=context.original_forecast_location | city_prepcase %}
  {% set new=context.forecast_location | city_prepcase %}

  {% chooseitem %}
    Предположу, что под погодой {{ original }} вы имели в виду погоду {{ new }}.
    В таком случае, {{ weather | decapitalize_first }} Надеюсь, вам это помогло.
  {% or %}
    Возможно, если вы спрашиваете погоду {{ original }}, вас интересует погода {{ new }}.
    {{ weather | capitalize_first }}
  {% or %}
    Погода {{ original }}... Думаю, вы имеете в виду погоду {{ new }}.
    {{ weather | capitalize_first }}
  {% endchooseitem %}
{% endmacro %}

{% macro geo_changed_attention_pressure(context, pressure) %}
  {% set original=context.original_forecast_location | city_prepcase %}
  {% set new=context.forecast_location | city_prepcase %}

  {% chooseitem %}
    Предположу, что под давлением {{ original }} вы имели в виду давление {{ new }}.
    В таком случае, {{ pressure | decapitalize_first }} Надеюсь, вам это помогло.
  {% or %}
    Возможно, если вы спрашиваете давление {{ original }}, вас интересует давление {{ new }}.
    {{ pressure | capitalize_first }}
  {% or %}
    Давление {{ original }}... Думаю, вы имеете в виду давление {{ new }}.
    {{ pressure | capitalize_first }}
  {% endchooseitem %}
{% endmacro %}

{% macro geo_changed_attention_wind(context, wind) %}
  {% set original=context.original_forecast_location | city_prepcase %}
  {% set new=context.forecast_location | city_prepcase %}

  {% chooseitem %}
    Предположу, что под ветром {{ original }} вы имели в виду ветер {{ new }}.
    В таком случае, {{ wind | decapitalize_first }} Надеюсь, вам это помогло.
  {% or %}
    Возможно, если вы спрашиваете ветер {{ original }}, вас интересует ветер {{ new }}.
    {{ wind | capitalize_first }}
  {% or %}
    Ветер {{ original }}... Думаю, вы имеете в виду ветер {{ new }}.
    {{ wind | capitalize_first }}
  {% endchooseitem %}
{% endmacro %}

{% macro background_sound(filename) %}
  <speaker background="{{filename}}">
{% endmacro %}
