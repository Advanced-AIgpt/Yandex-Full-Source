import json

import pytest
from alice.hollywood.library.python.testing.it2 import surface
from alice.hollywood.library.python.testing.it2.input import voice, callback
from google.protobuf import json_format


@pytest.mark.scenario(name='Weather', handle='weather')
class TestsFeedback:

    @pytest.mark.parametrize('surface', [surface.searchapp])
    def test_searchapp_like(self, alice):
        r = alice(voice('–ø–æ–≥–æ–¥–∞'))
        buttons = r.run_response.ResponseBody.Layout.SuggestButtons

        # like button is the first button
        like_button = buttons[0]
        assert like_button.ActionButton.Title == 'üëç'
        assert like_button.ActionButton.ActionId == 'suggest_feedback_positive_weather'

        # what if we press 'like' button?
        # type_silent should be the first directive
        # callback should be the second directive
        frame_action = r.run_response.ResponseBody.FrameActions[like_button.ActionButton.ActionId]
        dirs = frame_action.Directives.List

        type_text = dirs[0].TypeTextSilentDirective
        assert type_text.Text == 'üëç'

        cb_proto = dirs[1].CallbackDirective
        cb_json = json.loads(json_format.MessageToJson(cb_proto))
        cb_json['payload']['@scenario_name'] = 'Weather'  # Megamind would add this

        # click 'like' button
        r = alice(callback(name=cb_json['name'], payload=cb_json['payload']))
        assert r.run_response.ResponseBody.Layout.OutputSpeech in [
            '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!',
            '–°–ø–∞—Å–∏–±–æ, —Ö–≤–∞–ª–∏—Ç–µ –º–µ–Ω—è –ø–æ—á–∞—â–µ!',
            '–î–æ–±—Ä–æ–µ —Å–ª–æ–≤–æ –∏ –±–æ—Ç—É –ø—Ä–∏—è—Ç–Ω–æ.',
            '–°–ø–∞—Å–∏–±–æ, —è —Å—Ç–∞—Ä–∞—é—Å—å.',
            '–°–ø–∞—Å–∏–±–æ, –≤—ã –º–Ω–µ —Ç–æ–∂–µ —Å—Ä–∞–∑—É –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å!',
            '–°–ø–∞—Å–∏–±–æ, –≤—ã —Ç–æ–∂–µ –æ—á–µ–Ω—å –∫–ª–∞—Å—Å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫.',
            '–°–ø–∞—Å–∏–±–æ, —è –≤–∞–º —Ç–æ–∂–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ª–∞–π–∫!',
        ]
