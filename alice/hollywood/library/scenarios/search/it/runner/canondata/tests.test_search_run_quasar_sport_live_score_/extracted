# TScenarioRunResponse:
Features {
  Intent: "factoid"
  SearchFeatures {
    FoundSportLiveScoreFact: true
    FactFromDocs: true
    DirectOfferSimilarity {
    }
    DirectTitleSimilarity {
    }
    DirectInfoSimilarity {
    }
  }
}
ResponseBody {
  Layout {
    Cards {
      Text: "Футбольный матч Арсенал — Бернли завершился со счётом 0 - 0"
    }
    OutputSpeech: "Футбольный матч Арсенал — Бернли завершился со счётом 0 - 0"
    ShouldListen: true
  }
  State {
    [type.googleapis.com/NAlice.NHollywood.TSearchState] {
      PreviousQuery: "счет в матче арсенала"
      LastReplyHadHandoffPromo: true
    }
  }
  AnalyticsInfo {
    Intent: "factoid"
    Objects {
      Id: "tagger_query"
      Name: "tagger query"
      HumanReadable: "счет в матче арсенала"
    }
    Objects {
      Id: "selected_fact"
      Name: "{\"source\":\"sport/livescore\",\"text\":\"Футбольный матч Арсенал — Бернли завершился со счётом 0 - 0\",\"tts\":\"Футбольный матч Арсенал — Бернли завершился со счётом 0 - 0\",\"voice_info\":{\"lang\":\"ru-RU\",\"text\":\"Футбольный матч Арсенал — Бернли завершился со счётом 0 - 0\"}}"
      HumanReadable: "Дамп выбранного сценарием факта"
    }
    Objects {
      Id: "typed_selected_fact"
      Name: "typed_selected_fact"
      HumanReadable: "Дамп выбранного сценарием факта"
      SearchFact {
        Source: "sport/livescore"
        Text: "Футбольный матч Арсенал — Бернли завершился со счётом 0 - 0"
      }
    }
    Objects {
      Id: "factoid_src"
      Name: "sport/livescore"
      HumanReadable: "Источник поискового факта"
    }
    Objects {
      Id: "hwf_processor"
      Name: "datasource_dump"
      HumanReadable: "Сводная информация по источникам данных для фреймворка"
      SearchGenericInfo {
        DataSourceDocs {
          Parent: "docs/full"
          Type: "sport/livescore"
          Subtype: "football_match"
          Template: "sport/livescore"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/pre"
          Type: "sitelinks"
          Template: "sitelinks"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "canonize_unicode"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "remove_remoji"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docs/main"
          Type: "generic"
          Template: "generic"
        }
        DataSourceDocs {
          Parent: "docsright/full"
          Type: "entity_search"
          Template: "entity_search"
        }
      }
    }
    ProductScenarioName: "ontofacts"
    NlgRenderHistoryRecords {
      TemplateName: "search"
      PhraseName: "render_result"
      Language: L_RUS
    }
  }
  FrameActions {
    key: "alice.push_notification"
    value {
      NluHint {
        FrameName: "alice.push_notification"
      }
      Callback {
        Name: "frame_callback"
        Payload {
          fields {
            key: "frame"
            value {
              string_value: "{\"name\":\"alice.push_notification\"}"
            }
          }
        }
      }
    }
  }
  ContextualData {
    Conjugator {
      ResponseConjugationStatus: Conjugated
    }
  }
}
Version: "trunk@******"
