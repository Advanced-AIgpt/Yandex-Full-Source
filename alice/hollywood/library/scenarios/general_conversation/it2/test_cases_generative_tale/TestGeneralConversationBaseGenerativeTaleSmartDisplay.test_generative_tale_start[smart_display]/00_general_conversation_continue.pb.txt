BaseRequest {
  RequestId: "24c9890e-5620-501f-91c7-4fdabbadoo00"
  ServerTimeMs: 1579488271002
  RandomSeed: 894105474842877584
  ClientInfo {
    AppId: "ru.yandex.centaur"
    AppVersion: "1.0"
    OsVersion: "6.0.1"
    Platform: "android"
    Uuid: "deadbeef-uuid-uuid-uuid-deadbeef1234"
    DeviceId: "feedface-e8a2-4439-b2e7-689d95f277b7"
    Lang: "ru-RU"
    ClientTime: "20200120T024431"
    Timezone: "Europe/Moscow"
    Epoch: "1579488271"
    DeviceModel: "Station"
    DeviceManufacturer: "Yandex"
  }
  Location {
    Lat: 55.733771
    Lon: 37.587937
    Accuracy: 1.0
    Recency: 0.0
    Speed: 0.0
  }
  Interfaces {
    HasReliableSpeakers: true
    HasBluetooth: true
    CanChangeAlarmSound: true
    HasMicrophone: true
    HasMusicPlayerShots: true
    HasSynchronizedPush: true
    SupportsVideoProtocol: true
    TtsPlayPlaceholder: true
    Multiroom: true
    HasAudioClient: true
    IsPubliclyAvailable: true
    HasNotifications: true
    CanChangeAlarmSoundLevel: true
    CanServerAction: true
    CanRecognizeMusic: true
    IncomingMessengerCalls: true
    VideoCodecAVC: true
    AudioCodecAAC: true
    AudioCodecVORBIS: true
    AudioCodecOPUS: true
    CanRenderDiv2Cards: true
    HasDirectiveSequencer: true
    SupportsShowView: true
    OutgoingPhoneCalls: true
    SupportsVideoPlayDirective: true
    SupportsDivCardsRendering: true
    CanShowTimer: true
    HasMusicPlayer: true
    SupportsAbsoluteVolumeChange: true
    OpenAddressBook: true
    CanHandleAndroidAppIntent: true
    SupportsDoNotDisturbDirective: true
    SupportsVideoPlayer: true
    SupportsAnyPlayer: true
    SupportsButtons: true
    SupportsOutgoingDeviceCalls: true
  }
  DeviceState {
    DeviceId: "feedface-e8a2-4439-b2e7-689d95f277b7"
  }
  State {
  }
  Experiments {
    fields {
      key: "bg_fresh_granet_form=alice.generative_tale"
      value {
        string_value: "1"
      }
    }
    fields {
      key: "mm_enable_protocol_scenario=GeneralConversation"
      value {
        string_value: "1"
      }
    }
    fields {
      key: "mm_scenario=GeneralConversation"
      value {
        string_value: "1"
      }
    }
    fields {
      key: "hw_gc_render_general_conversation"
      value {
        string_value: "1"
      }
    }
  }
  Options {
    FiltrationLevel: 1
    ClientIP: "77.88.55.77"
    CanUseUserLogs: true
  }
  IsNewSession: true
  UserPreferences {
    FiltrationMode: Moderate
  }
  UserLanguage: L_RUS
  UserClassification {
  }
  Memento {
    UserConfigs {
      GenerativeTale {
        UsageCounter: 2
      }
    }
  }
  NluFeatures {
    Feature: 23
  }
  NluFeatures {
    Feature: 24
    Value: 0.55
  }
  NluFeatures {
    Feature: 25
  }
  NluFeatures {
    Feature: 26
  }
}
Arguments {
  [type.googleapis.com/NAlice.NHollywood.NGeneralConversation.TClassificationResult] {
    RecognizedFrame {
      Name: "alice.generative_tale.activate"
      Slots {
        Name: "character"
        Type: "string"
        Value: "рыцаря"
        AcceptedTypes: "string"
        TypedValue {
          Type: "string"
          String: "рыцаря"
        }
      }
    }
    IsFrameFeatured: true
    HasGenerativeTaleRequest: true
    ReplyInfo {
      Intent: "generative_tale"
      GenerativeTaleReply {
        Character: "Рыцаря"
        TaleState {
          Stage: FirstQuestion
          LastRequestTime: 1579488271
          Character: "Рыцаря"
          AvatarsIdForSharedLink: "/get-dialogs/758954/sharing_alice_generative_tails_2"
        }
      }
    }
    IsProactivityTimeAllowed: true
    CurrentRequestServerTimeMs: 1579488271002
    CurrentRequestSequenceNumber: 1
    GcClassifierScore: 0.55
    NeedContinue: true
    UserLanguage: L_RUS
  }
}
Input {
  SemanticFrames {
    Name: "alice.crosspromo_discuss"
    Slots {
      Name: "entity_crosspromo"
      Type: "custom.crosspromo_general_conversation"
      Value: "skazkah,skazkah"
      AcceptedTypes: "custom.crosspromo_general_conversation"
      AcceptedTypes: "string"
    }
  }
  SemanticFrames {
    Name: "alice.generative_tale.activate"
    Slots {
      Name: "character"
      Type: "string"
      Value: "рыцаря"
      AcceptedTypes: "string"
    }
    TypedSemanticFrame {
      ActivateGenerativeTaleSemanticFrame {
        Character {
          StringValue: "рыцаря"
        }
      }
    }
  }
  Voice {
    Utterance: "придумай сказку про рыцаря"
    AsrData {
      Utterance: "придумай сказку про рыцаря"
      Confidence: 1.0
      Words {
        Value: "придумай"
        Confidence: 1.0
      }
      Words {
        Value: "сказку"
        Confidence: 1.0
      }
      Words {
        Value: "про"
        Confidence: 1.0
      }
      Words {
        Value: "рыцаря"
        Confidence: 1.0
      }
    }
  }
}
