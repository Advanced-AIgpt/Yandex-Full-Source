# TScenarioRunResponse:
Version: "trunk@******"
ContinueArguments {
  [type.googleapis.com/NAlice.NHollywoodFw.TProtoHwSceneCCAArguments] {
    ScenarioArgs {
      [type.googleapis.com/NAlice.NHollywood.TMusicArguments] {
        ExecutionFlowType: ThinClientDefault
        AccountStatus {
          Uid: "1083955728"
          HasPlus: true
          HasMusicSubscription: true
          MusicSubscriptionRegionId: 225
        }
        GenerativeRequest {
          StationId: "generative:relax"
        }
        IoTUserInfo {
          RawUserInfo: "{\"payload\": {\"devices\": []}}"
        }
        IsNewContentRequestedByUser: true
      }
    }
    ProtoHwScene {
      OldFlowSelected: true
    }
  }
}

# TScenarioContinueResponse:
ResponseBody {
  Layout {
    Cards {
      Text: "Представьте, что вы облако. А я пока поставлю расслабляющую мелодию – алгоритмы Яндекс Музыки написали ее специально для вас."
    }
    OutputSpeech: "Мысли становятся легкими, алгоритмы Яндекс Музыки уже подготовили вашу личную мелодию для расслабления."
    Directives {
      AudioPlayDirective {
        Name: "music"
        Stream {
          Id: "d88d50e9b1defa83"
          Url: "https://generative-api.music.yandex.net/generative/playlist/d88d50e9b1defa83.m3u8"
          StreamFormat: HLS
        }
        AudioPlayMetadata {
          Title: "Спокойствие"
          ArtImageUrl: "avatars.yandex.net/get-music-misc/70850/generative-relax-image-1sOPx/%%"
          GlagolMetadata {
            MusicMetadata {
              Id: "generative:relax"
              Type: Generative
            }
          }
          HideProgressBar: true
        }
        Callbacks {
          OnPlayStartedCallback {
            Name: "music_thin_client_on_started"
            IgnoreAnswer: true
            Payload {
            }
          }
          OnPlayStoppedCallback {
            Name: "music_thin_client_on_stopped"
            IgnoreAnswer: true
            Payload {
              fields {
                key: "events"
                value {
                  list_value {
                    values {
                      struct_value {
                        fields {
                          key: "generativeFeedbackEvent"
                          value {
                            struct_value {
                              fields {
                                key: "generativeStationId"
                                value {
                                  string_value: "generative:relax"
                                }
                              }
                              fields {
                                key: "streamId"
                                value {
                                  string_value: "d88d50e9b1defa83"
                                }
                              }
                              fields {
                                key: "type"
                                value {
                                  string_value: "StreamPause"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          OnPlayFinishedCallback {
            Name: "music_thin_client_on_finished"
            IgnoreAnswer: true
            Payload {
            }
          }
          OnFailedCallback {
            Name: "music_thin_client_on_failed"
            IgnoreAnswer: true
            Payload {
            }
          }
        }
        ScenarioMeta {
          key: "content_id"
          value: "CAUSEGdlbmVyYXRpdmU6cmVsYXg="
        }
        ScenarioMeta {
          key: "owner"
          value: "music"
        }
        ScenarioMeta {
          key: "queue_item"
          value: "ChBkODhkNTBlOWIxZGVmYTgzGhbQodC/0L7QutC+0LnRgdGC0LLQuNC1MkdhdmF0YXJzLnlhbmRleC5uZXQvZ2V0LW11c2ljLW1pc2MvNzA4NTAvZ2VuZXJhdGl2ZS1yZWxheC1pbWFnZS0xc09QeC8lJTpcClFodHRwczovL2dlbmVyYXRpdmUtYXBpLm11c2ljLnlhbmRleC5uZXQvZ2VuZXJhdGl2ZS9wbGF5bGlzdC9kODhkNTBlOWIxZGVmYTgzLm0zdTgQmrXZhvwtGAFKDDAzSUtkcnFWb0Z6YVD/////B3gCggEKZ2VuZXJhdGl2ZaIBZQoQZ2VuZXJhdGl2ZTpyZWxheBJRaHR0cHM6Ly9nZW5lcmF0aXZlLWFwaS5tdXNpYy55YW5kZXgubmV0L2dlbmVyYXRpdmUvcGxheWxpc3QvZDg4ZDUwZTliMWRlZmE4My5tM3U4qgEUCAUSEGdlbmVyYXRpdmU6cmVsYXg="
        }
        ScreenType: Music
      }
    }
  }
  SemanticFrame {
    Name: "personal_assistant.scenarios.music_play"
    Slots {
      Name: "answer"
      Type: "music_result"
      AcceptedTypes: "music_result"
    }
  }
  State {
    [type.googleapis.com/NAlice.NHollywood.NMusic.TScenarioState] {
      Queue {
        PlaybackContext {
          ContentId {
            Type: Generative
            Id: "generative:relax"
          }
          DisableAutoflow: true
          BiometryOptions {
          }
        }
        History {
          TrackId: "d88d50e9b1defa83"
          Title: "Спокойствие"
          CoverUrl: "avatars.yandex.net/get-music-misc/70850/generative-relax-image-1sOPx/%%"
          UrlInfo {
            Url: "https://generative-api.music.yandex.net/generative/playlist/d88d50e9b1defa83.m3u8"
            UrlTime: 1579488271002
            UrlFormat: UrlFormatHls
          }
          PlayId: "03IKdrqVoFza"
          DurationMs: 2147483647
          ContentWarning: ChildSafe
          Type: "generative"
          GenerativeInfo {
            GenerativeStationId: "generative:relax"
            GenerativeStreamUrl: "https://generative-api.music.yandex.net/generative/playlist/d88d50e9b1defa83.m3u8"
          }
          OriginContentId {
            Type: Generative
            Id: "generative:relax"
          }
        }
        CurrentContentLoadingState {
          Generative {
          }
        }
        Config {
          PageSize: 20
          HistorySize: 10
          ExplicitFilteredOutWarningRate: 0.25
          FindTrackIdxPageSize: 10000
        }
        FiltrationMode: Moderate
      }
    }
  }
  AnalyticsInfo {
    Intent: "personal_assistant.scenarios.music_play"
    Actions {
      Id: "music_play"
      Name: "music play"
      HumanReadable: "Первый трек, который включится"
    }
    Objects {
      Id: "music.first_track_id"
      Name: "first_track_id"
      HumanReadable: "нейромузыка на станции \"Спокойствие\""
      FirstTrack {
        Id: "d88d50e9b1defa83"
        Duration: "2147483647"
      }
    }
    Events {
      Timestamp: 1579488271002000
      MusicEvent {
        AnswerType: Generative
        Id: "generative:relax"
        Uri: "generative:relax"
      }
    }
    Events {
      Timestamp: 1579488271002000
      MusicMonitoringEvent {
        BatchOfTracksRequested: true
      }
    }
    ProductScenarioName: "music"
    NlgRenderHistoryRecords {
      TemplateName: "music_play"
      PhraseName: "render_result"
      Language: L_RUS
    }
  }
  StackEngine {
    Actions {
      NewSession {
      }
    }
    Actions {
      ResetAdd {
        RecoveryAction {
          Callback {
            Name: "music_thin_client_recovery"
            Payload {
              fields {
                key: "playback_context"
                value {
                  struct_value {
                    fields {
                      key: "biometry_options"
                      value {
                        struct_value {
                        }
                      }
                    }
                    fields {
                      key: "content_id"
                      value {
                        struct_value {
                          fields {
                            key: "id"
                            value {
                              string_value: "generative:relax"
                            }
                          }
                          fields {
                            key: "type"
                            value {
                              string_value: "Generative"
                            }
                          }
                        }
                      }
                    }
                    fields {
                      key: "disable_autoflow"
                      value {
                        bool_value: true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
Version: "trunk@******"
