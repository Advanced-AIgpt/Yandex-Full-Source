# TScenarioRunResponse:
Features {
  MusicFeatures {
    Result {
      TrackNameSimilarity {
      }
      AlbumNameSimilarity {
      }
      ArtistNameSimilarity {
      }
    }
    Wizard {
      TitleSimilarity {
      }
      TrackNameSimilarity {
      }
      AlbumNameSimilarity {
      }
      ArtistNameSimilarity {
      }
      TrackLyricsSimilarity {
      }
    }
    Documents {
      TitleSimilarity {
      }
      SnippetSimilarity {
      }
    }
    IsPlayerCommand: true
  }
  PlayerFeatures {
  }
}
ResponseBody {
  Layout {
    Directives {
      PlayerPreviousTrackDirective {
        Name: "player_previous_track"
        Player: "music"
      }
    }
  }
  SemanticFrame {
    Name: "personal_assistant.scenarios.player_previous_track"
    Slots {
      Name: "music_player_only"
      Type: "flag"
      AcceptedTypes: "flag"
    }
  }
  AnalyticsInfo {
    Intent: "personal_assistant.scenarios.player_previous_track"
    ProductScenarioName: "player_commands"
    NlgRenderHistoryRecords {
      TemplateName: "music_play"
      PhraseName: "render_player"
      Language: L_RUS
    }
  }
}
Version: "trunk@******"
