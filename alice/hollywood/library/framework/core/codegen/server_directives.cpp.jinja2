//
// Autogenerated file
// This file was created from directives.proto and directives.jinja2 template
//
// Don't edit it manually!
// Please refer to doc: https://docs.yandex-team.ru/alice-scenarios/hollywood/main/codegen
// for more information about custom codegeneration
//

#include "gen_server_directives.pb.h"

#include <alice/megamind/protos/scenarios/directives.pb.h>
#include <alice/megamind/protos/scenarios/push.pb.h>
#include <alice/megamind/protos/scenarios/response.pb.h>

namespace NAlice::NHollywoodFw {
namespace {

template <class T>
class TCustomServerDirectiveWrapper final : public TServerDirectiveWrapper {
public:
    TCustomServerDirectiveWrapper(T&& directive, T*(NScenarios::TServerDirective::*fn)(), const TString& name)
        : TServerDirectiveWrapper(name)
        , Directive_(std::move(directive))
        , Fn_(fn)
    {
    }
    void Attach(NScenarios::TScenarioResponseBody& response) override {
        NScenarios::TServerDirective directive;
        T& directive2 = *((directive.*Fn_)());
        directive2.CopyFrom(Directive_);
        *(response.AddServerDirectives()) = std::move(directive);
    };
private:
    T Directive_;
    T*(NScenarios::TServerDirective::*Fn_)();
};

} // anonymous namespace

/*
    Add all compiled directives to response
*/
void TServerDirectivesWrapper::BuildAnswer(NScenarios::TScenarioResponseBody& response) {
    for (const auto& it : Directives_) {
        it->Attach(response);
    }
}

                                                                                            {%- for field in messages.TServerDirective.oneofs -%}
                                                                                                {%- for u in field.fields %}
                                                                                                    {%- if u.message.cpp.parent_name != "" %}
void TServerDirectivesWrapper::Add{{u.name}}({{u.message.cpp.namespace}}::{{u.message.cpp.parent_name}}_{{u.type_cpp.full}}&& directive) {
    auto p = std::make_shared<TCustomServerDirectiveWrapper<{{u.message.cpp.namespace}}::{{u.message.cpp.parent_name}}_{{u.type_cpp.full}}>>(
        std::move(directive), &NScenarios::TServerDirective::Mutable{{u.name_ucamelcase}}, "{{u.name_lowercase}}");
                                                                                                    {%- else %}
void TServerDirectivesWrapper::Add{{u.name}}({{u.message.cpp.namespace}}::{{u.type_cpp.full}}&& directive) {
    auto p = std::make_shared<TCustomServerDirectiveWrapper<{{u.message.cpp.namespace}}::{{u.type_cpp.full}}>>(
        std::move(directive), &NScenarios::TServerDirective::Mutable{{u.name_ucamelcase}}, "{{u.name_lowercase}}");
                                                                                                    {%- endif %}
    Directives_.push_back(p);
}
                                                                                                {%- endfor -%}
                                                                                            {%- endfor %}
} // namespace NAlice::NHollywoodFw
