import: common/adverbs.grnt
import: common/commands.grnt
import: common/conjunctions.grnt
import: common/filler.grnt
import: common/nouns.grnt
import: common/prepositions.grnt
import: common/pronouns.grnt
import: common/questions.grnt
import: common/tense.grnt
import: common/verbs.grnt

form alice.count_aloud:
    slots:
        count_from:
            type:
                sys.num
            source:
                $CountFrom
        count_to:
            type:
                sys.num
            source:
                $CountTo
                $CountNum
        count_order:
            type:
                custom.count_order
            source:
                $CountOrder

    root:
        $Common.LeftFiller* [$Common.ToCount+ $Aloud+ $CountNum* $CountOrder*]
        $Common.LeftFiller* [$Common.ToCount+ $CountFrom* $CountTo+ $CountOrder*]
        $Common.LeftFiller* [$Common.ToCount+ $CountFrom+ $CountTo* $CountOrder*]
        $Common.LeftFiller* [$Common.ToCount+ $CountOrder+ $CountNum*]
        $Common.LeftFiller* [$Launch+ $Common.TheOrder+ $Aloud+ $CountNum* $CountOrder*]
        $Common.LeftFiller* [$Launch+ $Common.TheOrder+ $CountFrom* $CountTo+ $CountOrder*]
        $Common.LeftFiller* [$Launch+ $Common.TheOrder+ $CountFrom+ $CountTo* $CountOrder*]
        $Common.LeftFiller* [$Launch+ $Common.TheOrder+ $CountOrder+ $CountNum*]

        %force_negative
        $Negative

    filler:
        $Aloud
        $Common.Approximately
        $Common.By
        $Common.Can
        $Common.ConjunctionWhile
        $Common.Do
        $Common.Filler
        $Common.For
        $Common.Help
        $Common.Immediately
        $Common.In
        $Common.Later
        $Common.Little
        $Common.PlayGame
        $Common.PronounsAll
        $Common.QuestionHow
        $Common.QuestionHowMuch
        $Common.QuestionWhen
        $Common.Slowly
        $Common.Tense
        $Common.TheNumber
        $Common.TheOrder
        $Common.ToGo
        $Common.ToHide
        $Common.Together
        $Common.WayToCallAlice
        $Common.With
        $Launch
        %lemma
        зарядка
        прятки
        упражнение
        чтобы
        только

$Launch:
    $Common.Lets
    $Common.ToMake
    $Common.Start
    $Common.Teach
    $Common.Tell
    $Common.ToShow
    $Common.TurnOn

$Aloud:
    $Common.Aloud
    $Common.To+ $Common.QuestionHowMuch+

$CountFrom:
    $Common.From+ $sys.num+

$CountTo:
    $Common.To+ $sys.num+

$CountNum:
    $sys.num

$CountOrder:
    %type "custom.count_order"
    %lemma
    %enable_synonyms all
    %disable_synonyms synset

    %value "ascending"
    возрастание
    возрастающий
    прямо
    прямой
    растущий

    %value "descending"
    обратно
    обратный
    убывание
    убывающий

$NegativePrefix:
    буду
    могу
    он
    она
    я

$NegativeSuffix:
    досчитает
    досчитал
    досчитала
    досчитать
    досчитаю
    посчитает
    посчитал
    посчитала
    посчитать
    посчитаю
    сосчитает
    сосчитал
    сосчитала
    сосчитать
    сосчитаю
    считает
    считал
    считала
    считать
    считаю

$Negative:
    .* $NegativePrefix .* $NegativeSuffix .*
    %negative
    .* $NegativePrefix .* ты .* $NegativeSuffix .*
    .* $NegativePrefix .* $NegativeSuffix .* $Common.Together .*
