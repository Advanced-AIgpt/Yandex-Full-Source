#p_1:
#  - p_2
#  - not p_3
#  - p_4
#...
# is equivalent to
#if p_1():
#    if p_2() or not p_3() or p_4():
#        return False
#...
#return True
########################################################################################################################
#главная причина почему переделывается таким образом - это оптимизация
#в старом варианте на ифах проверялись предикаты, которые заранее можно предпосчитать, то есть предикаты с intent_name,
#например для интента, для которого предикат is_happy_new_year_bloggers_intent возвращает true
#условие
#if is_open_site_or_app(intent_name) and clients.is_smart_speaker(req_info.app_info):
#    return False
#превратится в
#if False and clients.is_smart_speaker(req_info.app_info):
#    return False
#при помощи данного подхода утверждается, что мы сможем отсечь очень много заведомо ложных условий
#да, действительно если мы заранее предпосчитаем все предикаты с intent_name, то вместо 100 условий нам останется
#проверить максимум 5
#
#как строится конфиг:
#на первом этапе должен быть предикат, который проверяет условие intent_name
#на втором этапе проверются все условия, зависящие от req_info, session, но для которых предикат из первого этапа
#вернул true
########################################################################################################################
#пример:
#def is_allowed_intent(intent_name, session, req_info):
#    is_quasar = clients.is_quasar(req_info.app_info)
#    if is_tv_intent(intent_name):
#        if not req_info:
#            return False
#        if is_quasar:
#            if req_info.experiments['quasar_tv'] is None:
#                return False
#        else:
#            if req_info.experiments['tv'] is None:
#                return False
#
#превращается в:
########################################################################################################################
#содержимое файла predicates.py
#reg = PredicateRegistrant()
#
#@reg
#def is_tv_intent(intent_name):
#    return intents.is_tv_intent(intent_name)
#
#@reg
#def is_req_info(req_info):
#    return req_info
#
#@reg
#def is_quasar_and_req_info_experiments_quasar_tv_is_none(req_info):
#    return clients.is_quasar(req_info.app_info) and req_info.experiments['quasar_tv'] is None
#
#@reg
#def is_not_quasar_and_is_req_info_experiments_tv_is_none(req_info):
#    return not clients.is_quasar(req_info.app_info) and req_info.experiments['tv'] is None
#
#декоратор @reg нужен только для функций, которые используются в конфиге, для остальных вспомогательных функций
#декоратор не нужен
########################################################################################################################
#содержимое файла config.yaml
#
#is_allowed_intent:
#  is_tv_intent:
#    - not is_req_info
#    - is_quasar_and_req_info_experiments_quasar_tv_is_none
#    - is_not_quasar_and_is_req_info_experiments_tv_is_none
########################################################################################################################
#можно считать, что данный конфиг развернётся в такую питоновскую конструкцию
#def is_allowed_intent(intent_name, session, req_info):
#    if is_tv_intent(intent_name):
#        if not is_req_info(req_info) or is_quasar_and_req_info_experiments_quasar_tv_is_none(req_info) or
#                is_not_quasar_and_is_req_info_experiments_tv_is_none(req_info):
#            return False
#    return True


is_allowed_intent:
  is_happy_new_year_bloggers_intent:
    - is_smart_speaker
  is_quasar_video_gallery_selection_by_text:
    - is_current_screen_not_in_gallery_season_gallery
  is_quasar_ether_gallery_selection_by_text:
    - is_current_screen_not_in_mordovia_gallery
  is_quasar_channel_gallery_selection_by_text:
    - is_current_screen_not_tv_gallery
  is_quasar_tv_specific:
    - not is_tv_plugged_in
  # Some intents should be available only on particular screens
  is_quasar_tv_specific_and_quasar_video_screen_selection:
    - is_current_screen_not_in_main
  is_quasar_tv_specific_and_quasar_gallery_navigation:
    - is_current_screen_not_in_gallery_season_gallery_tv_gallery_mordovia_allowed_tv_screens
  is_quasar_tv_specific_and_quasar_vertical_screen_navigation:
    - not supports_vertical_screen_navigation
    - is_current_screen_not_in_mordovia_and_not_in_tv_screens_allowed_for_vertical_navigation
  is_quasar_tv_specific_and_quasar_video_payment_action:
    - is_current_screen_not_in_description_season_gallery
  is_quasar_tv_specific_and_quasar_provider_authorization_action:
    - is_current_screen_not_in_description
  is_quasar_tv_specific_and_quasar_video_details_opening_action:
    - is_current_screen_not_in_description_video_player_payment_season_gallery

  is_alarm_stop_playing_intent:
    - not is_alarm_buzzing
  is_alarm_snooze_intent:
    - not is_alarm_buzzing
  is_alarm_sound_set_level_intent:
    - not has_alarm_in_utterance
  is_timer_stop_playing_intent:
    - not is_timer_buzzing
  is_stroka_intent:
    - is_not_stroka_or_yabro
  is_player_intent:
    - not does_have_player
  is_player_intent_and_not_player_resume_intent:
    - player_commands_are_disabled_and_not_auto_and_not_after_shazam
  # st.yandex-team.ru/DIALOG-2535
  is_player_replay_intent:
    - is_smart_speaker_and_tv_plugged_in_and_is_current_screen_not_in_video_player_music_player_radio_player
    - is_smart_speaker_and_not_tv_plugged_in_and_not_really_playing
  is_sound_intent_and_not_is_sound_toggle_intent:
    - not can_change_sound
  is_sound_toggle_intent:
    - not can_toggle_sound
  is_navigator_intent:
    - is_not_client_with_navigator
  is_quasar_faq:
    - not is_smart_speaker
  is_onboarding_continuation_intent:
    - is_not_smart_speaker_or_elari_watch_or_tv
  is_player_intent_or_sound_intent:
    - is_elari_watch
  is_sleep_timer_intent:
    - req_info_experiments_sleep_timers_is_none
  # Some intents should be available only under particular experiment flags
  is_taxi_intent:
    - is_taxi_new_experiment_not_none
  is_taxi_new_intent:
    - is_taxi_new_experiment_none
  is_my_name:
    - is_personalization_experiment_none
  is_market_native:
    - is_market_disable_experiment_not_none_and_market_enable_experiment_none
    - is_market_native_experiment_none
  is_market_intent:
    - is_market_disable_experiment_not_none_and_market_enable_experiment_none
  is_market_beru_intent:
    - not is_market_beru_disable_experiment_none
  is_recurring_purchase_intent:
    - not is_recurring_purchase_disable_experiment_none
  is_shopping_list_intent:
    - not is_shopping_list_disable_experiment_none
    - not is_shopping_list_knn_disable_experiment_none
    - is_shopping_list_experiment_none
  is_shopping_list_fixlist_intent:
    - not is_shopping_list_disable_experiment_none
    - is_shopping_list_fixlist_experiment_none
  is_how_much_intent:
    - not is_how_much_disable_experiment_none
  is_how_much_internal_intent:
    - is_protocol_how_much_disable_experiment_none
  is_video_play_intent:
    - is_video_play_conditions_not_achieved
  is_skill:
    - is_no_external_skill_experiment_not_none
  is_translate_intent:
    - is_translate_experiment_none
  is_refuel_intent:
    - is_refuel_experiment_none
  is_avia_intent:
    - is_avia_experiment_none
  is_show_collection_intent:
    - is_show_collection_experiment_none
  is_happy_new_year_intent:
    - is_happy_new_year_experiment_none
  is_radio_onboarding_intent:
    - are_radio_play_experiments_none
  is_voiceprint_remove:
    - is_biometry_remove_experiment_none
  is_alarm_sound_old_microintent:
    - not is_change_alarm_sound_experiment_none

  not is_safe_for_autoapp:
    - is_autoapp
  is_autoapp_microintent:
    - not is_autoapp
  # within general conversation scenario, only several scenarios are allowed
  not is_allowed_in_gc:
    - is_pure_general_conversation_in_session
  is_gc_only:
    - not is_pure_general_conversation_in_session
  is_handcrafted_deaf_intent:
    - not is_searchapp
