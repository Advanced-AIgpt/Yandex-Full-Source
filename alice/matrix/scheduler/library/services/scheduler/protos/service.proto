syntax = "proto3";

package NMatrix.NScheduler.NServiceProtos;

import "alice/protos/api/matrix/scheduler_api.proto";

import "apphost/proto/extensions/extensions.proto";


service SchedulerService {
    // [BEGIN TAddScheduledActionHandler]
    rpc AddScheduledAction (TAddScheduledActionRequest) returns (TAddScheduledActionResponse) { option(path) = "/add_scheduled_action"; };
    // [END TAddScheduledActionHandler]

    // [BEGIN TRemoveScheduledActionHandler]
    rpc RemoveScheduledAction (TRemoveScheduledActionRequest) returns (TRemoveScheduledActionResponse) { option(path) = "/remove_scheduled_action"; };
    // [END TRemoveScheduledActionHandler]
}

// [BEGIN TAddScheduledActionRequest]
message TAddScheduledActionRequest {
    reserved 1;


    // The maximum allowed number of such items in a request is 10
    repeated NApi.TAddScheduledActionRequest ApiRequests = 2 [(typing_apphost_type) = "add_scheduled_action_request"];
}
// [END TAddScheduledActionRequest]

// [BEGIN TAddScheduledActionResponse]
message TAddScheduledActionResponse {
    reserved 1;

    repeated NApi.TAddScheduledActionResponse ApiResponses = 2 [(typing_apphost_type) = "add_scheduled_action_response"];
}
// [END TAddScheduledActionResponse]

// [BEGIN TRemoveScheduledActionRequest]
message TRemoveScheduledActionRequest {
    reserved 1;

    // The maximum allowed number of such items in a request is 10
    repeated NApi.TRemoveScheduledActionRequest ApiRequests = 2 [(typing_apphost_type) = "remove_scheduled_action_request"];
}
// [END TRemoveScheduledActionRequest]

// [BEGIN TRemoveScheduledActionResponse]
message TRemoveScheduledActionResponse {
    reserved 1;

    repeated NApi.TRemoveScheduledActionResponse ApiResponses = 2 [(typing_apphost_type) = "remove_scheduled_action_response"];
}
// [END TRemoveScheduledActionResponse]
