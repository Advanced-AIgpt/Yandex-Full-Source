//
// Autogenerated file
// This file was created from directives.proto and directives.jinja2 template
//
// Don't edit it manually!
// Please refer to doc: https://TODO for more information about custom codegeneration
//

#include "directives.h"
void TDirectivesWrapper::AddTCallbackDirectiveSample(const TStringBuf name = "callback_directive_sample") {
}
void TDirectivesWrapper::AddTOpenDialogDirectiveSample(const TStringBuf name = "open_dialog_directive_sample") {
}
void TDirectivesWrapper::AddTUpdateDialogInfoDirectiveSample(const TStringBuf name = "update_dialog_info_directive_sample") {
}
void TDirectivesWrapper::AddTOpenUriDirectiveSample(const TStringBuf name = "open_uri_directive_sample") {
}
void TDirectivesWrapper::AddTEndDialogSessionDirectiveSample(const TStringBuf name = "end_dialog_session_directive_sample") {
}
void TDirectivesWrapper::AddTTypeTextDirectiveSample(const TStringBuf name = "type_text_directive_sample") {
}
void TDirectivesWrapper::AddTStopBluetoothDirectiveSample(const TStringBuf name = "stop_bluetooth_directive") {
}
void TDirectivesWrapper::AddTStartBluetoothDirectiveSample(const TStringBuf name = "start_bluetooth_directive") {
}
void TDirectivesWrapper::AddTReadPageDirectiveSample(const TStringBuf name = "read_page_directive") {
}
void TDirectivesWrapper::AddTReadPagePauseDirectiveSample(const TStringBuf name = "read_page_pause_directive") {
}
void TDirectivesWrapper::AddTReadPageContinueDirectiveSample(const TStringBuf name = "read_page_continue_directive") {
}

