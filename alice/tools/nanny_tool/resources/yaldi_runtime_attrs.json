{"comment":"","content":{"engines":{"engine_type":"YP_LITE"},"instance_spec":{"auxDaemons":[],"containers":[{"command":["/usr/bin/supervisord","-n","-c","supervisor.d/supervisord.conf"],"coredumpPolicy":{"coredumpProcessor":{"aggregator":{"saas":{"gdb":{"execPath":"/usr/bin/gdb","type":"LITERAL"},"serviceName":"","url":"http://cores.n.yandex-team.ru/corecomes"},"type":"DISABLED"},"cleanupPolicy":{"ttl":{"seconds":3600},"type":"DISABLED"},"countLimit":3,"path":"/cores","probability":100,"totalSizeLimit":10240},"customProcessor":{"command":""},"type":"NONE"},"env":[{"name":"YALDI_LOG_LEVEL","valueFrom":{"literalEnv":{"value":"INFO"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"KALDI_MMAP_FST","valueFrom":{"literalEnv":{"value":"map_locked"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"YALDI_ASR_VERSION","valueFrom":{"literalEnv":{"value":"1"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"YALDI_USE_CUDA","valueFrom":{"literalEnv":{"value":"0"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"YALDI_TOTAL_CONNECTION_LIMIT","valueFrom":{"literalEnv":{"value":"40"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"YALDI_MAXCONNECTION","valueFrom":{"literalEnv":{"value":"19"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"YALDI_WORKER_TYPE","valueFrom":{"literalEnv":{"value":"hybrid"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}},{"name":"YALDI_HYBRID_PROCESSES","valueFrom":{"literalEnv":{"value":"19"},"secretEnv":{"field":"","keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"type":"LITERAL_ENV","vaultSecretEnv":{"field":"","vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}}}}],"hostDevices":[],"lifecycle":{"preStop":{"execAction":{"command":[]},"httpGet":{"host":"","httpHeaders":[],"path":"/stop_hook","port":"80","uriScheme":""},"tcpSocket":{"host":"","port":""},"type":"HTTP_GET"},"stopGracePeriodSeconds":10,"termBarrier":"WAIT","terminationGracePeriodSeconds":10},"name":"supervisor","readinessProbe":{"failureThreshold":0,"handlers":[{"execAction":{"command":[]},"httpGet":{"host":"","httpHeaders":[],"path":"/ping","port":"80","uriScheme":"HTTP"},"tcpSocket":{"host":"","port":""},"type":"HTTP_GET"}],"initialDelaySeconds":5,"maxPeriodSeconds":60,"minPeriodSeconds":5,"periodBackoff":2,"successThreshold":0},"reopenLogAction":{"handler":{"execAction":{"command":[]},"httpGet":{"host":"","httpHeaders":[],"path":"","port":"","uriScheme":""},"tcpSocket":{"host":"","port":""},"type":"NONE"}},"resourceRequest":{"limit":[],"request":[]},"restartPolicy":{"maxPeriodSeconds":60,"minPeriodSeconds":1,"periodBackoff":2,"periodJitterSeconds":20,"type":"ALWAYS"},"securityPolicy":{"runAsUser":""},"unistatEndpoints":[{"path":"unistat","port":"80"}]},{"command":["push-client","-w","-f","-c","push_client_data/push-client-config.yaml"],"coredumpPolicy":{"coredumpProcessor":{"aggregator":{"saas":{"gdb":{"execPath":"/usr/bin/gdb","type":"LITERAL"},"serviceName":"","url":"http://cores.n.yandex-team.ru/corecomes"},"type":"DISABLED"},"cleanupPolicy":{"ttl":{"seconds":3600},"type":"DISABLED"},"countLimit":3,"path":"/cores","probability":100,"totalSizeLimit":10240},"customProcessor":{"command":""},"type":"NONE"},"env":[],"hostDevices":[],"lifecycle":{"preStop":{"execAction":{"command":[]},"httpGet":{"host":"","httpHeaders":[],"path":"","port":"","uriScheme":""},"tcpSocket":{"host":"","port":""},"type":"NONE"},"stopGracePeriodSeconds":0,"termBarrier":"IGNORE","terminationGracePeriodSeconds":10},"name":"push-client","readinessProbe":{"failureThreshold":0,"handlers":[],"initialDelaySeconds":5,"maxPeriodSeconds":60,"minPeriodSeconds":5,"periodBackoff":2,"successThreshold":0},"reopenLogAction":{"handler":{"execAction":{"command":[]},"httpGet":{"host":"","httpHeaders":[],"path":"","port":"","uriScheme":""},"tcpSocket":{"host":"","port":""},"type":"NONE"}},"resourceRequest":{"limit":[],"request":[]},"restartPolicy":{"maxPeriodSeconds":60,"minPeriodSeconds":1,"periodBackoff":2,"periodJitterSeconds":20,"type":"ALWAYS"},"securityPolicy":{"runAsUser":""},"unistatEndpoints":[]}],"dockerImage":{"name":"","registry":"registry.yandex.net"},"hostProvidedDaemons":[],"id":"","initContainers":[{"command":["/bin/sh","-c","chmod +x qloud_format.py"],"env":[],"hostDevices":[],"name":"prepare-qloud-format","unistatEndpoints":[]}],"instanceAccess":{"skynetSsh":"ENABLED"},"instancectl":{"fetchableMeta":{"sandboxResource":{"resourceId":"1176089255","resourceType":"INSTANCECTL","taskId":"532412396","taskType":""},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:41496d19171ee14033e507c0f98806bbfc20223d"],"version":"1.198"},"layersConfig":{"bind":[],"layer":[{"fetchableMeta":{"sandboxResource":{"resourceId":"988989372","resourceType":"PORTO_LAYER","taskId":"349892156","taskType":"BUILD_PORTO_LAYER"},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:fd3f82a8f6e1dfc7358b3f85c0faf18a76dc995f"]}]},"networkProperties":{"etcHosts":"KEEP_ETC_HOSTS","resolvConf":"DEFAULT_RESOLV_CONF"},"notifyAction":{"handlers":[],"resourceRequest":{"limit":[],"request":[]}},"osContainerSpec":{"auxDaemons":[],"dockerImage":{"name":"","registry":""},"hostProvidedDaemons":[],"initContainers":[],"instanceAccess":{"skynetSsh":"DISABLED"},"instancectl":{"fetchableMeta":{"sandboxResource":{"resourceId":"960408298","resourceType":"INSTANCECTL","taskId":"434510397","taskType":""},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:a8bc2ad6ff18da19702b6f848fed4dd6c855259e"],"version":"1.180"},"layersConfig":{"bind":[],"layer":[{"fetchableMeta":{"sandboxResource":{"resourceId":"703602428","resourceType":"PORTO_LAYER_SEARCH_UBUNTU_PRECISE_APP","taskId":"313732989","taskType":"BUILD_PORTO_LAYER"},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:4eccf4fdbd83d58dc290d550ac82969724c53945"]}]},"networkProperties":{"etcHosts":"KEEP_ETC_HOSTS","resolvConf":"DEFAULT_RESOLV_CONF"},"notifyAction":{"handlers":[],"resourceRequest":{"limit":[],"request":[]}},"type":"SANDBOX_LAYERS","volume":[]},"qemuKvm":{"image":{"linux":{"authorizedUsers":{"type":"SERVICE_MANAGERS","userList":{"logins":[],"nannyGroupIds":[],"staffGroupIds":[]}},"image":{"fetchableMeta":{"sandboxResource":{"resourceId":"409331232","resourceType":"QEMU_IMAGE","taskId":"178867853","taskType":"REMOTE_COPY_RESOURCE"},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:59f6fc1ff7efd59a8f37547dc4a4baebfa8af023"]}},"type":"LINUX","windows":{"image":{"fetchableMeta":{"sandboxResource":{"resourceId":"","resourceType":"","taskId":"","taskType":""},"type":"SANDBOX_RESOURCE"},"url":[]}}},"instancectl":{"fetchableMeta":{"sandboxResource":{"resourceId":"960408298","resourceType":"INSTANCECTL","taskId":"434510397","taskType":""},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:a8bc2ad6ff18da19702b6f848fed4dd6c855259e"],"version":"1.180"},"layersConfig":{"fetchableMeta":{"sandboxResource":{"resourceId":"562598663","resourceType":"PORTO_LAYER_SEARCH_QEMU_UBUNTU_XENIAL","taskId":"248826138","taskType":""},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:882c02f072d0c4d4bbf556fe50ceec626e795446"],"version":"vmagent_last"},"vmagent":{"fetchableMeta":{"sandboxResource":{"resourceId":"947964256","resourceType":"VMAGENT_PACK","taskId":"428833900","taskType":""},"type":"SANDBOX_RESOURCE"},"url":["rbtorrent:278507f66246cc9f02a7ffae6242496d0929a096"],"version":"0.20"}},"type":"SANDBOX_LAYERS","volume":[{"itsVolume":{"itsUrl":"http://its.yandex-team.ru/v1","maxRetryPeriodSeconds":300,"periodSeconds":60},"name":"supervisor.d","secretVolume":{"keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"templateVolume":{"template":[{"dstPath":"supervisord.conf","srcPath":"supervisord.conf.template"}]},"type":"TEMPLATE","vaultSecretVolume":{"vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}},"version":""},{"itsVolume":{"itsUrl":"http://its.yandex-team.ru/v1","maxRetryPeriodSeconds":300,"periodSeconds":60},"name":"push_client_data","secretVolume":{"keychainSecret":{"keychainId":"","secretId":"","secretRevisionId":""},"secretName":""},"templateVolume":{"template":[{"dstPath":"push-client-config.yaml","srcPath":"push-client-config.yaml.tpl"}]},"type":"TEMPLATE","vaultSecretVolume":{"vaultSecret":{"delegationToken":"","secretId":"","secretName":"","secretVer":""}},"version":""}]},"instances":{"chosen_type":"YP_POD_IDS","extended_gencfg_groups":{"containers_settings":{"slot_porto_properties":"NONE"},"instance_properties_settings":{"tags":"ALL_STATIC"},"network_settings":{"hbf_nat":"enabled"}},"gencfg_groups":[],"iss_settings":{"hooks_resource_limits":{"iss_hook_install":{"cpu_policy":"normal","io_policy":"normal"},"iss_hook_notify":{"cpu_policy":"normal","io_policy":"normal"},"iss_hook_reopenlogs":{"cpu_policy":"normal","io_policy":"normal"},"iss_hook_status":{"cpu_policy":"normal","io_policy":"normal"},"iss_hook_stop":{"cpu_policy":"normal","io_policy":"normal"},"iss_hook_uninstall":{"cpu_policy":"normal","io_policy":"normal"},"iss_hook_validate":{"cpu_policy":"normal","io_policy":"normal"}},"instance_cls":"ru.yandex.iss.Instance"},"yp_pod_ids":{"orthogonal_tags":{"ctype":"prod","itype":"asr","metaprj":"voicetech","prj":"yaldi-mapsyari-ua-man"},"pods":[]},"yp_pods":{"allocations":[],"orthogonal_tags":{"ctype":"unknown","itype":"unknown","metaprj":"unknown","prj":"default-content-service"},"tags":[]}},"resources":{"l7_fast_balancer_config_files":[],"sandbox_files":[{"extract_path":"","is_dynamic":false,"local_path":"lingware","resource_id":"280211072","resource_type":"VOICETECH_YALDI_UK_UA_MAPSYARI","task_id":"119008132","task_type":"HTTP_UPLOAD"},{"extract_path":"","is_dynamic":false,"local_path":"punct","resource_id":"583912238","resource_type":"OTHER_RESOURCE","task_id":"258350947","task_type":"HTTP_UPLOAD_2"},{"extract_path":"","is_dynamic":false,"local_path":"biometry","resource_id":"210283158","resource_type":"VOICETECH_YALDI_MODELS","task_id":"88230101","task_type":"HTTP_UPLOAD"},{"extract_path":"","is_dynamic":false,"local_path":"revnorm","resource_id":"538492568","resource_type":"VOICETECH_YALDI_MODELS","task_id":"237628116","task_type":"HTTP_UPLOAD_2"},{"extract_path":"","is_dynamic":false,"local_path":"yaldi-server","resource_id":"1123031832","resource_type":"VOICETECH_YALDI_SERVER","task_id":"508824144","task_type":"UPLOAD_VOICETECH_RESOURCE"},{"extract_path":"","is_dynamic":false,"local_path":"push-client","resource_id":"341072995","resource_type":"STATBOX_PUSHCLIENT","task_id":"146741790","task_type":"BUILD_STATBOX_PUSHCLIENT"},{"extract_path":"","is_dynamic":false,"local_path":"qloud_format.py","resource_id":"1138993630","resource_type":"OTHER_RESOURCE","task_id":"515835538","task_type":"HTTP_UPLOAD_2"}],"services_balancer_config_files":[],"static_files":[{"content":"#!/bin/bash\n\nWORKDIR=`pwd`\n\n# Absolute path to this script, e.g. /home/user/bin/foo.sh\nSCRIPT=$(readlink -f \"$0\")\n\n# Absolute path this script is in, thus /home/user/bin\nSCRIPTDIR=$(dirname \"$SCRIPT\")\n\nif [[ -f run_local.sh ]]; then\n    # has debug/testing runner - use it\n    . run_local.sh\n    exit\nfi\n\necho \"port BSCONFIG_IPORT=$BSCONFIG_IPORT; YALDI_LOG_LEVEL=$YALDI_LOG_LEVEL\"\n\nif [[ -z \"$BSCONFIG_IPORT\" ]]; then\n    BSCONFIG_IPORT=80\nfi\n\nif [[ -z \"$YALDI_LOG_LEVEL\" ]]; then\n    YALDI_LOG_LEVEL=\"INFO\"\nfi\n\nREQS_LIMIT=${YALDI_MAXREQUESTSLIMIT:-1000000000}\n\nif [[ -n YALDI_MAXCONNECTION ]]; then\n    CONN_LIMIT=$YALDI_MAXCONNECTION\nelse\n    # TODO: replace QLOUD* to something more modern\n    if [[ -z \"$QLOUD_CPU_LIMIT\" ]]; then\n        CONN_LIMIT=\"32\"\n        YALDI_MAX_CONN_REDIRECT=\"30\"\n    else\n        CONN_LIMIT=`echo $QLOUD_CPU_LIMIT $QLOUD_CPU_GUARANTEE ${QLOUD_YALDI_RTF_FACTOR:-2.6} | awk {'printf (\"%.0f\\n\"),($1*$3)'}`\n        YALDI_MAX_CONN_REDIRECT=`echo $QLOUD_CPU_GUARANTEE ${QLOUD_YALDI_RTF_FACTOR:-2.6} | awk {'printf (\"%.0f\\n\"),($1*$2*1.2)'}`\n    fi\nfi\n\nif [[ -n $YALDI_EMBEDDED ]]; then\n    CONN_LIMIT=\"32\"\nfi\n\nASR_VERSION=${YALDI_ASR_VERSION:-1}\nWORKER_TYPE=\"${YALDI_WORKER_TYPE:-hybrid}\"\necho \"\"\"\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<config>\n    <serverconfig>\n        <asr_version>$ASR_VERSION</asr_version>\n        <ip>0.0.0.0</ip>\n        <port>80</port>\n        <cpuLimit>false</cpuLimit>\n        <chunkedtimeout>7</chunkedtimeout>\n        <accesslog>STDOUT</accesslog>\n        <syslog>yaldi.syslog</syslog>\n        <pidfilename>yaldi.pid</pidfilename>\n        <loglevel>$YALDI_LOG_LEVEL</loglevel>\n        <workertype>$WORKER_TYPE</workertype>\n        <maxrequestslimit>$REQS_LIMIT</maxrequestslimit>\n        <maxconnection>$CONN_LIMIT</maxconnection>\n        $BIOMETRY\n\"\"\" >yaldi.xml\n\nlet \"WORKERS_LIMIT=CONN_LIMIT*2\"\nWORKERS_LIMIT=\"${YALDI_TOTAL_CONNECTION_LIMIT:-${WORKERS_LIMIT}}\"\necho \"        <totalconnection>${WORKERS_LIMIT}</totalconnection>\" >>yaldi.xml\n\nif [[ \"$YALDI_USE_CUDA\" == \"1\" ]]; then\n    HYBRID_PROCESSES=$(nvidia-smi -L | wc -l)\necho \"        <gpu_required>1</gpu_required>\" >>yaldi.xml\nelse\n    let \"HYBRID_PROCESSES=WORKERS_LIMIT/10+1\"\n    export CUDA_VISIBLE_DEVICES=-1\nfi\nHYBRID_PROCESSES=\"${YALDI_HYBRID_PROCESSES:-${HYBRID_PROCESSES}}\"\necho \"        <hybrid_processes>${HYBRID_PROCESSES}</hybrid_processes>\" >>yaldi.xml\n\nif [[ -d lingware ]]; then\n    for lw in `ls lingware/ --hide=_iss*`; do\necho \"        <lingware>lingware/$lw</lingware>\" >>yaldi.xml\n    done\nelse\n    >&2 echo \"Lingware doesn't exist\"\n    exit 1;\nfi\n\nYALDI_REVNORM_DIR=\"${YALDI_REVNORM_DIR:-revnorm}\"\nif [[ -d $YALDI_REVNORM_DIR ]]; then\n    RESOURCE_DIR=`ls $YALDI_REVNORM_DIR --hide=_iss* | head -1`\n    echo \"        <reverse_normalizer>${YALDI_REVNORM_DIR}/${RESOURCE_DIR}</reverse_normalizer>\" >>yaldi.xml\nfi\n\nYALDI_PUNCT_DIR=\"${YALDI_PUNCT_DIR:-punct}\"\nif [[ -d $YALDI_PUNCT_DIR ]]; then\n    RESOURCE_DIR=`ls $YALDI_PUNCT_DIR --hide=_iss* | head -1`\n    YALDI_PUNCT_CFG=${YALDI_PUNCT_DIR}/${RESOURCE_DIR}/punctuation.conf\n    if [[ -f $YALDI_PUNCT_CFG ]]; then\n        echo \"        <punctuation>${YALDI_PUNCT_CFG}</punctuation>\" >>yaldi.xml\n    fi\nfi\n\nif [[ -e biometry/ ]]; then\n    B=`ls biometry/ --hide=_iss*`\n    echo \"        <biometry>biometry/$B/yabio.conf</biometry>\" >>yaldi.xml\nfi\n\nif [[ -n $YALDI_ONTHEFLY ]]; then\n    echo \"        <onthefly>True</onthefly>\" >>yaldi.xml\nfi\n\nif [[ -n $YALDI_EMBEDDED ]]; then\n    echo \"        <embedded>True</embedded>\" >>yaldi.xml\nfi\n\necho \"\"\"    </serverconfig>\n</config>\n\"\"\" >>yaldi.xml\n\necho \"##### BEGIN yaldi.xml #####\"\ncat yaldi.xml\necho \"##### END yaldi.xml #####\"\n\nexport LD_LIBRARY_PATH=/usr/local/cuda-9.1/targets/x86_64-linux/lib:$WORKDIR/yaldi-server/yaldi-server\n\necho \"##### RUN yaldi-server #####\"\nexec yaldi-server/yaldi-server/yaldi-server yaldi.xml\n\n","is_dynamic":false,"local_path":"run.sh"},{"content":"; supervisor config file\n\n[unix_http_server]\nfile={{ BSCONFIG_IDIR }}/supervisor.sock   ; (the path to the socket file)\nchmod=0700                       ; sockef file mode (default 0700)\n\n[supervisord]\nlogfile=/logs/supervisord.log\nlogfile_maxbytes=50MB\nlogfile_backups=2\npidfile={{ BSCONFIG_IDIR }}/supervisord.pid\n\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///var/run/supervisor.sock\n\n[program:yaldi]\ncommand = {{ BSCONFIG_IDIR }}/run.sh\nautostart = true\nautorestart = true\nstderr_logfile=/logs/yaldi.err\nstderr_logfile_maxbytes=50MB\nstderr_logfile_backups=2\nstdout_logfile=/logs/yaldi.out\nstdout_logfile_maxbytes=1GB\nstdout_logfile_backups=2","is_dynamic":false,"local_path":"supervisord.conf.template"},{"content":"files:\n- name: /logs/{{orthogonal_tags['a_itype']}}.out\n  send_delay: 5\n  log_type: {{orthogonal_tags['a_itype']}}\n  pipe: ./qloud_format.py\n- name: /logs/{{orthogonal_tags['a_itype']}}.err\n  send_delay: 5\n  log_type: {{orthogonal_tags['a_itype']}}\n  pipe: ./qloud_format.py\n- name: /logs/supervisord.log\n  send_delay: 5\n  log_type: {{orthogonal_tags['a_itype']}}\n  pipe: ./qloud_format.py\nident: voicetech@asr\nlogger:\n  file: /logs/push-client.log\n  level: 5\n  mode:\n  - file \nnetwork:\n  master_addr: logbroker.yandex.net\nwatcher:\n  state: push-client-state\n","is_dynamic":false,"local_path":"push-client-config.yaml.tpl"}],"template_set_files":[],"url_files":[]}},"meta_info":{"is_disposable":false,"scheduling_config":{"scheduling_priority":"NONE"}},"snapshot_id":"i3b2mcjqgkvydqdu4g44g4sr"}
