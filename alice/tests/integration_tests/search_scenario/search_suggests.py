import alice.tests.library.directives as directives
import alice.tests.library.intent as intent
import alice.tests.library.scenario as scenario
import alice.tests.library.surface as surface
import pytest


@pytest.mark.parametrize('surface', [surface.searchapp])
class TestSearchSuggest(object):

    owners = ('tolyandex', )

    serp_phrases = [
        '–ò—â—É –æ—Ç–≤–µ—Ç',
        '–ù–∞–π–¥—ë—Ç—Å—è –≤—Å—ë!',
        '–ò—â—É –≤ –Ø–Ω–¥–µ–∫—Å–µ',
        '–°–µ–π—á–∞—Å –Ω–∞–π–¥—É',
        '–°–µ–π—á–∞—Å –Ω–∞–π–¥—ë–º',
        '–û–¥–Ω—É —Å–µ–∫—É–Ω–¥—É...',
        '–û—Ç–∫—Ä—ã–≤–∞—é –ø–æ–∏—Å–∫',
        '–ò—â—É –¥–ª—è –≤–∞—Å –æ—Ç–≤–µ—Ç',
        '–î–∞–≤–∞–π—Ç–µ –ø–æ–∏—â–µ–º',
    ]

    def test_serp(self, alice):
        response = alice('–µ–±–∏ –¥–æ–µ–±–∏')

        search_suggest = response.suggest('üîç "–µ–±–∏ –¥–æ–µ–±–∏"')
        assert search_suggest
        response = alice.click(search_suggest)

        assert response.scenario == scenario.Search
        assert response.intent == intent.Serp
        assert response.text in self.serp_phrases
        assert response.directive.name == directives.names.OpenUriDirective
        assert '–ü–æ–∏—Å–∫–∞—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å–µ' == response.buttons[0].title

    def test_fact(self, alice):
        response = alice('–ª–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç')

        search_suggest = response.suggest('üîç "–ª–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç"')
        assert search_suggest
        response = alice.click(search_suggest)

        assert response.scenario == scenario.Search
        assert response.intent in [intent.Factoid, intent.ObjectAnswer, intent.ObjectSearchOO]
