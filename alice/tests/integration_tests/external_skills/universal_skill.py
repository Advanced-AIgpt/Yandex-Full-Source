import alice.tests.library.auth as auth
import alice.tests.library.intent as intent
import alice.tests.library.scenario as scenario
import alice.tests.library.surface as surface
import pytest

from .common import ExternalSkillIntents


@pytest.mark.parametrize('surface', [
    surface.automotive,
    surface.launcher,
    surface.loudspeaker,
    surface.searchapp,
    surface.smart_tv,
    surface.station,
    surface.yabro_win,
])
@pytest.mark.parametrize('', [
    pytest.param(id='http_adapter'),
    pytest.param(id='apphost', marks=pytest.mark.experiments('use_app_host_pure_Dialogovo_scenario'))
])
class TestUniversalSkill(object):
    '''
    https://testpalm.yandex-team.ru/testcase/paskills-1015
    https://testpalm.yandex-team.ru/testcase/paskills-1018
    https://testpalm.yandex-team.ru/testcase/paskills-1019
    https://testpalm.yandex-team.ru/testcase/paskills-1020
    https://testpalm.yandex-team.ru/testcase/paskills-1021
    https://testpalm.yandex-team.ru/testcase/paskills-1052
    https://testpalm.yandex-team.ru/testcase/paskills-1053
    https://testpalm.yandex-team.ru/testcase/paskills-1058
    https://testpalm.yandex-team.ru/testcase/paskills-1060
    https://testpalm.yandex-team.ru/testcase/paskills-1061
    https://testpalm.yandex-team.ru/testcase/paskills-1062
    https://testpalm.yandex-team.ru/testcase/paskills-1063
    https://testpalm.yandex-team.ru/testcase/paskills-1071
    https://testpalm.yandex-team.ru/testcase/paskills-1080
    https://testpalm.yandex-team.ru/testcase/paskills-1084
    https://testpalm.yandex-team.ru/testcase/paskills-1107
    https://testpalm.yandex-team.ru/testcase/paskills-1108
    https://testpalm.yandex-team.ru/testcase/paskills-1111
    https://testpalm.yandex-team.ru/testcase/paskills-1161
    https://testpalm.yandex-team.ru/testcase/paskills-1073
    https://testpalm.yandex-team.ru/testcase/alice-2140
    '''

    owners = ('abc:yandexdialogs2',)

    start_command = '–∑–∞–ø—É—Å—Ç–∏ –Ω–∞–≤—ã–∫ –æ–ª–µ–≥ –¥—É–ª–∏–Ω'

    @pytest.mark.parametrize('command', ['–¥–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤', '–ø–æ–∏–≥—Ä–∞–µ–º –≤', '–∑–∞–ø—É—Å—Ç–∏ –Ω–∞–≤—ã–∫'])
    @pytest.mark.parametrize('skill', ['–æ–ª–µ–≥ –¥—É–ª–∏–Ω', '–æ–¥–∏–Ω –¥–µ–Ω—å –∏–≤–∞–Ω–∞', '–µ—â–µ –æ–¥–∏–Ω –¥–∏–∞–ª–æ–≥ –æ–±–ª–∞–∫–∞', '–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ç–∏–≤–Ω—ã–π'])
    def test_paskills_1060_1061_1062_1080_1107(self, alice, command, skill):
        response = alice(f'{command} {skill}')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        assert response.scenario_analytics_info.object('name') == skill
        if surface.is_smart_speaker(alice):
            assert '–ó–∞–ø—É—Å–∫–∞—é –Ω–∞–≤—ã–∫' in response.text

    @pytest.mark.parametrize('command', ['–¥–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤', '–ø–æ–∏–≥—Ä–∞–µ–º –≤', '–∑–∞–ø—É—Å—Ç–∏ –Ω–∞–≤—ã–∫'])
    @pytest.mark.parametrize('dssm', ['—É–≥–∞–¥–∞–π –º–µ–ª–æ–¥–∏—é', '–±—ã—Å—Ç—Ä–µ–µ –≤—ã—Å–æ–∫–∏–π —Å–∏–ª—å–Ω–µ–µ', '—á—Ç–æ –±—ã–ª–æ —Ä–∞–Ω–µ–µ'])
    def test_paskills_1058(self, alice, command, dssm):
        response = alice(f'{command} {dssm}')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        if surface.is_smart_speaker(alice):
            assert '–ó–∞–ø—É—Å–∫–∞—é –Ω–∞–≤—ã–∫' in response.text

    @pytest.mark.parametrize('command', ['—Ö–≤–∞—Ç–∏—Ç', '–∞–ª–∏—Å–∞ —Ö–≤–∞—Ç–∏—Ç', '—è–Ω–¥–µ–∫—Å —Ö–≤–∞—Ç–∏—Ç'])
    def test_paskills_1108(self, alice, command):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice(command)
        assert response.intent == ExternalSkillIntents.Deactivate
        assert response.text == '–û—Ç–ª–∏—á–Ω–æ, –±—É–¥–µ—Ç —Å–∫—É—á–Ω–æ ‚Äî –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å.'

        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.intent == intent.Hello

    def test_paskills_1111(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('0')
        assert response.text == '–¥–æ–±—Ä—ã –¥–∑–µ–Ω—å –¥–ª—è —Ç—ç—Å—Ç—É'
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1015(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('1')
        assert response.text == '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç session'
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1018(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('4')
        assert response.text == '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç session_id'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('400')
        session_id = response.text
        assert response.scenario == scenario.Dialogovo

        response = alice('400')
        assert response.text == session_id
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1019(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('5')
        assert response.text == '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç message_id'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('500')
        message_id = int(response.text)
        assert response.scenario == scenario.Dialogovo

        response = alice('500')
        assert int(response.text) == message_id + 1
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1020(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('6')
        assert response.text == '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç user_id'
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1021_1189(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('7')
        assert response.text == '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç end_session'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('400')
        assert response.scenario == scenario.Dialogovo
        session_id = response.text

        response = alice('44')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        assert response.text == 'end_session = true'

        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.intent == intent.Hello

        response = alice('–ø–æ–ø—Ä–æ—Å–∏ –æ–ª–µ–≥ –¥—É–ª–∏–Ω 500')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '0'

        response = alice('400')
        assert response.scenario == scenario.Dialogovo
        assert response.text != session_id

    def test_paskills_1052(self, alice):
        session_state = 0

        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('46')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ - {session_state}'
        assert response.scenario == scenario.Dialogovo
        session_state += 1

        response = alice('46')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ - {session_state}'
        assert response.scenario == scenario.Dialogovo

        response = alice('0')
        assert response.scenario == scenario.Dialogovo
        session_state = 0

        response = alice('46')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ - {session_state}'
        assert response.scenario == scenario.Dialogovo

    def test_paskills_1053(self, alice):
        user_state = 0

        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('47')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {user_state}'
        assert response.scenario == scenario.Dialogovo

        response = alice('47')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {user_state}'
        assert response.scenario == scenario.Dialogovo

    def test_paskills_1063(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo

        response = alice('—ç–π –≤–∫–ª—é—á–∏ —Å–≤–µ—Ç –≤ –≤–∞–Ω–Ω–æ–π')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        assert response.text == '–ò–Ω—Ç–µ–Ω—Ç—ã: —Å–≤–µ—Ç,—ç–π,–≤ –≤–∞–Ω–Ω–æ–π'

        response = alice('—á–∏—Å–ª–æ 13')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        assert response.text == '–ò–Ω—Ç–µ–Ω—Ç—ã: 13'

    def test_paskills_1071(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo

        response = alice('19')
        assert response.text == '–ü–æ–ª—É—á–∏ —Å–º–∞–π–ª–∏–∫ üôÇüôÇüôÇ'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('20')
        assert response.text == 'M'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('üôÇ')
        assert response.text == '–ø—Ä–∏–≤–µ—Ç —è —Ç–µ—Å—Ç–æ–≤—ã–π –Ω–∞–≤—ã–∫\n'
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1084_alice_2140(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo

        response = alice('2 —Å–µ–∫—É–Ω–¥—ã')
        assert response.text == '2 —Å–µ–∫—É–Ω–¥—ã'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('3 —Å–µ–∫—É–Ω–¥—ã')
        assert response.text == '3 —Å–µ–∫—É–Ω–¥—ã'
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1161(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo

        response = alice('–º–∞—Ç')
        assert response.text == '<censored>'
        assert response.intent == ExternalSkillIntents.Request

    def test_paskills_1173(self, alice):
        response = alice('–ø–æ–ø—Ä–æ—Å–∏ –æ–ª–µ–≥ –¥—É–ª–∏–Ω —Å–ª–æ–∂–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        assert response.text == '—Å–ª–æ–∂–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å'


@pytest.mark.oauth(auth.Skills)
@pytest.mark.parametrize('surface', [
    surface.automotive,
    surface.launcher,
    surface.loudspeaker,
    surface.searchapp,
    surface.station,
    surface.yabro_win,
    surface.smart_tv,
])
class TestUniversalSkillAuth(object):
    '''
    https://testpalm.yandex-team.ru/testcase/paskills-1047
    https://testpalm.yandex-team.ru/testcase/paskills-1067
    '''

    owners = ('abc:yandexdialogs2',)

    @pytest.mark.xfail(reason='https://st.yandex-team.ru/HOLLYWOOD-1031')
    def test_paskills_1047(self, alice):
        user_state = 0

        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('49')
        assert response.text == '–£–¥–∞–ª—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('47')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {user_state}'
        assert response.scenario == scenario.Dialogovo
        user_state += 1

        response = alice('47')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {user_state}'
        assert response.scenario == scenario.Dialogovo

    def test_paskills_1067(self, alice):
        session_state = 0

        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('46')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ - {session_state}'
        assert response.scenario == scenario.Dialogovo
        session_state += 1

        response = alice('46')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ - {session_state}'
        assert response.scenario == scenario.Dialogovo

        response = alice('0')
        assert response.scenario == scenario.Dialogovo
        session_state = 0

        response = alice('46')
        assert response.text == f'—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ - {session_state}'
        assert response.scenario == scenario.Dialogovo


@pytest.mark.parametrize('surface', [
    surface.loudspeaker,
    surface.station,
])
class TestUniversalSkillSmartSpeakers(object):
    '''
    https://testpalm.yandex-team.ru/testcase/paskills-1017
    https://testpalm.yandex-team.ru/testcase/paskills-1031
    '''

    owners = ('abc:yandexdialogs2',)

    def test_paskills_1017(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('2')
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.intent == intent.Hello

        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('3')
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.intent == intent.Hello

    def test_paskills_1031(self, alice):
        response = alice('–∑–∞–ø—É—Å—Ç–∏ –Ω–∞–≤—ã–∫ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å —ç–∫—Ä–∞–Ω–æ–º')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request
        assert response.text == '–Ø —ç—Ç–æ, –∫–æ–Ω–µ—á–Ω–æ, —É–º–µ—é. –ù–æ –≤ –¥—Ä—É–≥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.'


@pytest.mark.parametrize('surface', [
    surface.automotive,
    surface.launcher,
    surface.searchapp,
    surface.yabro_win,
])
class TestUniversalSkillNotSmartSpeakers(object):
    '''
    https://testpalm.yandex-team.ru/testcase/paskills-973
    '''

    owners = ('abc:yandexdialogs2',)

    def test_paskills_973(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('2')
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request

        response = alice('3')
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        assert response.intent == ExternalSkillIntents.Request

        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.scenario == scenario.Dialogovo
        assert response.intent == ExternalSkillIntents.Request


@pytest.mark.xfail(reason='https://st.yandex-team.ru/PASKILLS-7197')
@pytest.mark.parametrize('surface', [
    surface.loudspeaker,
    surface.smart_tv,
    surface.station,
])
class TestUniversalSkillTimeoutsSmartSpeakers(object):

    owners = ('svintenok',)

    def test_paskills_first_timeout(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('4 —Å–µ–∫—É–Ω–¥—ã')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        response = alice('0')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–¥–æ–±—Ä—ã –¥–∑–µ–Ω—å –¥–ª—è —Ç—ç—Å—Ç—É'

    def test_paskills_two_timeouts_in_row(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('4 —Å–µ–∫—É–Ω–¥—ã')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        response = alice('4 —Å–µ–∫—É–Ω–¥—ã')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        response = alice('–ø—Ä–∏–≤–µ—Ç')
        assert response.intent == intent.Hello
        assert response.scenario != scenario.Dialogovo

    def test_paskills_timeout_after_success_request(self, alice):
        response = alice(TestUniversalSkill.start_command)
        assert response.scenario == scenario.Dialogovo
        response = alice('4 —Å–µ–∫—É–Ω–¥—ã')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        response = alice('0')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–¥–æ–±—Ä—ã –¥–∑–µ–Ω—å –¥–ª—è —Ç—ç—Å—Ç—É'
        response = alice('4 —Å–µ–∫—É–Ω–¥—ã')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤—ã–∫ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç'
        response = alice('0')
        assert response.scenario == scenario.Dialogovo
        assert response.text == '–¥–æ–±—Ä—ã –¥–∑–µ–Ω—å –¥–ª—è —Ç—ç—Å—Ç—É'
