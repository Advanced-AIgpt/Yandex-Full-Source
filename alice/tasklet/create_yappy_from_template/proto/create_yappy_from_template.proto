syntax = "proto3";

import "ci/tasklet/common/proto/service.proto";
import "search/priemka/yappy/proto/structures/patch.proto";
import "tasklet/services/ci/proto/ci.proto";
import "tasklet/api/tasklet.proto";
import "tasklet/services/yav/proto/yav.proto";

package alice.tasklet.create_yappy_from_template;

message Context {
    option (.tasklet.context) = true;

    yav_service.YavService yav = 1 [(.tasklet.inject) = true];
}

message Patch {
    string name = 1;
    int64 resource_id = 2;
}

message Config {
    string cmd_line = 1;
    string template_name = 2;
    repeated Patch patches = 3;
    string suffix = 4;
    int32 retries = 5;
    int32 sleep_time = 6;
    float backoff = 7;
    string token = 8;
    string component_id = 9;
    string parent_external_id = 10;
    string yappy_token = 11;
    string nanny_token = 12;
    int32 wait_for_beta = 13;
}

message Input {
    ci.TaskletContext context = 1;

    Config config = 2;
}

message State {
    bool success = 1;
    string beta_name = 2;
    string endpoint_set = 3;
    int32 endpoint_port = 4;
}

message Output {
    State state = 1;
}

message CreateBetaFromTemplate {
    option (.tasklet.tasklet_interface) = true;

    Input input = 1 [(.tasklet.input) = true];
    Output output = 2 [(.tasklet.output) = true];

    Context ctx = 3;
}
