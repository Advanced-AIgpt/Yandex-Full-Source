USE hahn; 
PRAGMA yt.InferSchema;
PRAGMA SimpleColumns;

$capture_log = Re2::Capture("SESSIONLOG: (.*)");

$activation_type = CASE 
        WHEN transcript == "Recognizer is started" THEN "Recognizer is started"
        WHEN transcript REGEXP("^\\*") THEN "Подпороговое срабатывание"
        ELSE ENSURE("Обычное срабатывание" , transcript IS NOT NULL AND transcript != "", "Empty transcript in logs!")
    END;

$spotter_type = CASE 
        WHEN source REGEXP("alice|alisa|Alice|Alisa") THEN "Alice"
        WHEN source REGEXP("yandex|Yandex") THEN "Yandex"
        ELSE ENSURE("Other", source IS NULL OR source == "", "Unknown source in logs!")
    END;

$activation_count = CASE 
    WHEN spotter_type == "Alice" THEN 
        CASE
            WHEN text REGEXP("(^алис| алис).* алис") THEN 2
            WHEN text REGEXP("^алис| алис") THEN 1
            WHEN text IS NOT NULL THEN 0
            ELSE NULL
        END
    WHEN spotter_type == "Yandex" THEN
        CASE
            WHEN text REGEXP("яндекс.*яндекс") THEN 2
            WHEN text REGEXP("яндекс") THEN 1
            WHEN text IS NOT NULL THEN 0
            ELSE NULL
        END
    ELSE
        CASE
            WHEN text IS NOT NULL THEN 0
            ELSE NULL
        END
    END;
    


$spotter_log = ( 
    SELECT transcript, source, mds_key FROM 
        [//home/voice-speechbase/uniproxy/spotter/${global.fielddate}] AS log
    LEFT ONLY JOIN (
        SELECT
           Yson::ConvertToString(Yson::ParseJson($capture_log(message)._1).Event.event.payload.uuid) as uuid
        FROM [home/logfeller/logs/qloud-runtime-log/1d/${global.fielddate}]
        WHERE
            qloud_project     = 'voice-ext'  AND
            qloud_application = 'uniproxy' AND
            qloud_environment = 'prestable' AND
            message like '%SynchronizeState%' AND
            message like '%quasar.services%'
    ) AS beta_uuids
    ON log.uuid == beta_uuids.uuid
    WHERE key == "51ae06cc-5c8f-48dc-93ae-7214517679e6"
);

$spotter = (
    SELECT * WITHOUT yang.mds_key, yang.uuid, yang.source
    FROM $spotter_log AS log
    LEFT JOIN [//home/voice/toloka/ru-RU/daily/quasar-spotter-yang/${global.fielddate}] AS yang 
    ON log.mds_key == yang.mds_key
);



$stats = (
    SELECT 
        spotter_type, 
        activation_type, 
        transcript, 
        COUNT(*) AS total,
        COUNT_IF($activation_count == 2) AS more,
        COUNT_IF($activation_count == 1) AS one,
        COUNT_IF($activation_count == 0) AS no
        
    FROM $spotter
    GROUP BY 
        $spotter_type AS spotter_type,
        $activation_type AS activation_type,
        ROLLUP(transcript)
);


UPSERT INTO stat.[VoiceTech/monitorings/quality_spotter/daily]
SELECT 
    "${global.fielddate}" AS fielddate,
    "\t" || String::JoinFromList(AsList(spotter_type, activation_type, transcript), "\t") || "\t"  AS id,
    total, 
    IF(more != 0 OR one != 0 OR no != 0, more, NULL) AS more, 
    IF(more != 0 OR one != 0 OR no != 0, one, NULL) AS one, 
    IF(more != 0 OR one != 0 OR no != 0, no, NULL) AS no
FROM $stats

