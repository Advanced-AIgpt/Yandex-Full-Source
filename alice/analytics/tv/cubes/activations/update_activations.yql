$job_date = {{param.date}};
$recalc_period = unwrap(cast({{param.recalc_period}} as Int64));

$activations = "//home/sda/cubes/tv/activations/last";
$sessions = "//home/smarttv/logs/tvandroid_sessions/1d";

$date_pattern = "%Y-%m-%d";
$date_format = DateTime::Format($date_pattern);
$string_date_add_days = ($date, $days) -> {
    RETURN $date_format(DateTime::MakeDate(DateTime::Parse($date_pattern)($date)) + Interval("P1D") * $days);
};
$start_date = $string_date_add_days($job_date, -$recalc_period);

$known_qdid = select distinct quasar_device_id from $activations where quasar_device_id is not null;
$known_eth0 = select distinct eth0 from $activations where eth0 is not null;

insert into $activations with truncate
select * from (
    select
        activation_id,
        MIN($date_format(DateTime::StartOfDay(DateTime::FromSeconds(CAST(COALESCE(receive_timestamp, event_timestamp) AS Uint32))))) AS activation_date,
        MIN_BY(eth0, IF(eth0 IS NOT NULL, event_date)) AS eth0,
        MIN_BY(quasar_device_id, IF(quasar_device_id IS NOT NULL, event_date)) AS quasar_device_id,
        MIN_BY(wlan0, IF(wlan0 IS NOT NULL, event_date)) AS wlan0,
        MIN_BY(app_version, IF(app_version IS NOT NULL, event_date)) ?? '' AS app_version,
        MIN_BY(firmware_version, IF(firmware_version IS NOT NULL, event_date)) ?? '' AS firmware_version,
        MIN_BY(build_fingerprint, IF(build_fingerprint IS NOT NULL, event_date)) ?? '' AS build_fingerprint,
        MIN_BY(manufacturer, IF(manufacturer IS NOT NULL, event_date)) ?? '' AS manufacturer,
        MIN_BY(model, IF(model IS NOT NULL, event_date)) ?? '' AS model,
        MIN_BY(diagonal, IF(diagonal IS NOT NULL, event_date)) ?? 0 AS diagonal,
        MIN_BY(resolution, IF(resolution IS NOT NULL, event_date)) ?? '' AS resolution,
        -- MIN_BY(crypta_id, IF(crypta_id IS NOT NULL, event_date)) ?? '' AS crypta_id,
        CAST(MIN_BY(Yson::LookupInt64(clids, 'clid1', Yson::Options(false as Strict)), IF(Yson::LookupInt64(clids, 'clid1', Yson::Options(false as Strict)) IS NOT NULL, event_date)) AS String) ?? '' AS clid1,
        MIN_BY(board, IF(board IS NOT NULL, event_date)) ?? '' AS board,
        MIN_BY(build, IF(build IS NOT NULL, event_date)) ?? '' AS build,
        MIN_BY(platform, IF(platform IS NOT NULL, event_date)) ?? '' AS platform,
        MIN_BY(geo_id, IF(geo_id IS NOT NULL, event_date)) ?? 0 AS geo_id,
        MIN_BY(device_id, IF(device_id IS NOT NULL, event_date)) ?? '' AS device_id
    from range($sessions, $start_date)
    where quasar_device_id not in $known_qdid and eth0 not in $known_eth0
    group by coalesce(eth0, quasar_device_id) as activation_id

    union all

    select * from $activations
)
order by activation_date, activation_id
