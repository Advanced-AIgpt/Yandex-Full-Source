package NAliceMusicMatchAdapterConfig;

import "alice/cuttlefish/library/proto_configs/service.cfgproto";
import "library/cpp/proto_config/protos/extensions.proto";
option (NProtoConfig.Include) = "util/datetime/base.h";

message MusicMatch {
    option (NProtoConfig.ConfigClass) = "TMusicMatch";

    optional string host = 1 [(NProtoConfig.Help) = "hostname for music backend", default="localhost"];
    optional uint32 port = 2 [(NProtoConfig.Help) = "port music backend", default=80];
    optional string path = 3 [(NProtoConfig.Help) = "path in websocket request to music backend", default="/match/websocket"];

    optional uint32 client_threads = 4 [(NProtoConfig.Help) = "count music backend client threads (neh/asio executors)", default=12];
    optional string connect_timeout = 5 [
        (NProtoConfig.Help) = "timelimit for tcp connect to music backend",
        (NProtoConfig.Type) = "TDuration",
        (NProtoConfig.DefaultValue) = "TDuration::MilliSeconds(100)"
    ];
};

message Config {
    option (NProtoConfig.ConfigClass) = "TConfig";
    optional NAliceServiceConfig.Server server = 1 [(NProtoConfig.Help) = "common apphost servant options"];
    optional MusicMatch music_match = 2 [(NProtoConfig.Help) = "client options for work with music backend"];
};
