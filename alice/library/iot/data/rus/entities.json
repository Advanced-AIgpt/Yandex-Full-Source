{
    "action": [
        {
            "bow_forms": [
                "{stop}",
                "(восполнить|восполнять|пополнить|пополнять) {charge}",
                "({cleaner_return}|) ({to_charge}|{to_cleaner_station})"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.vacuum_cleaner"
                ],
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "продолжи {cleaning}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.vacuum_cleaner"
                ],
                "default_context": {
                    "device_type": "devices.types.vacuum_cleaner"
                }
            }
        },
        {
            "bow_forms": [
                "{turn_on}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "require_device_as_target": true,
                "nlg": {
                    "variants": ["Включаю."]
                },
                "bonus_if_matched_room": 1110
            }
        },
        {
            "bow_forms": [
                "{turn_on} все"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "nlg": {
                    "variants": ["Включаю."]
                }
            }
        },
        {
            "bow_forms": [
                "{turn_off}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Выключаю.",
                        "Окей, выключаем.",
                        "Окей, выключаю."
                    ]
                },
                "bonus_if_matched_room": 1110
            }
        },
        {
            "bow_forms": [
                "{turn_off} все",
                "{turn_off} (|все) (|#бытовые) (#устройства|#приборы)"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "default_context": {
                    "device_type": "all"
                },
                "nlg": {
                    "variants": [
                        "Выключаю.",
                        "Окей, выключаем.",
                        "Окей, выключаю."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{turn_on} все",
                "{turn_on} (|все) (|#бытовые) (#устройства|#приборы)"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "force_no_target": true
            }
        },
        {
            "bow_forms": [
                "({open}|{raise}|{move_apart})"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.openable",
                    "devices.types.openable.curtain"
                ],
                "nlg": {
                    "variants": ["Открываю."]
                }
            }
        },
        {
            "bow_forms": [
                "({close}|{lower})"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.openable",
                    "devices.types.openable.curtain"
                ],
                "nlg": {
                    "variants": [
                        "Закрываю.",
                        "Окей, закрываем.",
                        "Окей, закрываю."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{make_tea}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "require_device_as_target": true,
                "applicable_types": [
                    "devices.types.cooking.kettle"
                ],
                "nlg": {
                    "variants": [
                        "Окей, кипячу чайник.",
                        "Хорошо, ставлю чайник."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{make_tea} чай"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "infer_targets_from_capabilities": true,
                "applicable_types": [
                    "devices.types.cooking.kettle"
                ],
                "default_context": {
                    "device_type": "devices.types.cooking.kettle"
                },
                "nlg": {
                    "variants": [
                        "Окей, кипячу чайник.",
                        "Хорошо, ставлю чайник."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{for_pet} {feed} ({pet_food}|)",
                "{for_pet} {pour} {pet_food} ({pet_feeder}|)",
                "{for_pet} {pour} {pet_feeder} ({pet_food}|)"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "infer_targets_from_capabilities": true,
                "applicable_types": [
                    "devices.types.pet_feeder"
                ],
                "default_context": {
                    "device_type": "devices.types.pet_feeder"
                }
            }
        },
        {
            "bow_forms": [
                "({begin}|) {cleaning}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.vacuum_cleaner"
                ],
                "default_context": {
                    "device_type": "devices.types.vacuum_cleaner"
                }
            }
        },
        {
            "bow_forms": [
                "({turn_on}|{start}|{warm_up}) {engine}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.remote_car"
                ],
                "default_context": {
                    "device_type": "devices.types.remote_car"
                },
                "nlg": {
                    "phrase": "start_car_engine"
                }
            }
        },
        {
            "bow_forms": [
                "({turn_off}|{shut_down}) {engine}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.remote_car"
                ],
                "default_context": {
                    "device_type": "devices.types.remote_car"
                }
            }
        },
        {
            "bow_forms": [
                "({start}|{warm_up})"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.remote_car"
                ],
                "nlg": {
                    "phrase": "start_car_engine"
                }
            }
        },
        {
            "bow_forms": [
                "{shut_down}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.remote_car"
                ]
            }
        },
        {
            "bow_forms": [
                "{finish} {cleaning}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.vacuum_cleaner"
                ],
                "nlg": {
                    "variants": ["Заканчиваю уборку."]
                },
                "default_context": {
                    "device_type": "devices.types.vacuum_cleaner"
                }
            }
        },
        {
            "bow_forms": [
                "{cook_verb} кофе"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.cooking.coffee_maker"
                ],
                "default_context": {
                    "device_type": "devices.types.cooking.coffee_maker"
                }
            }
        },
        {
            "bow_forms": [
                ""
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "relative": "invert",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "({subopen}|{subraise})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open",
                "relative": "increase"
            }
        },
        {
            "bow_forms": [
                "({open}|{subopen}|{raise}|{subraise}|{move_apart})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ]
            }
        },
        {
            "bow_forms": [
                "({open}|{subopen}|{raise}|{subraise}|{move_apart}) ещё"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open",
                "relative": "increase",
                "required_arg_variants": [
                    {
                        "type": "num"
                    },
                    {
                        "type": "num",
                        "unit": "unit.percent"
                    }
                ]
            }
        },
        {
            "bow_forms": [
                "({subclose}|{sublower)"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open",
                "relative": "decrease"
            }
        },
        {
            "bow_forms": [
                "({close}|{subclose}|{lower}|{sublower})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open",
                "relative": "decrease",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ]
            }
        },
        {
            "bow_forms": [
                "{set} (открытие|раскрытие|открытость)"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ]
            }
        },
        {
            "bow_forms": [
                "{increase} ({brightness}|{light})",
                "{set} {brighter}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "relative": "increase",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Окей, сделаем поярче.",
                        "Окей, делаем ярче.",
                        "Окей, добавим яркости.",
                        "Добавляю яркости.",
                        "Больше яркости. Окей."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{decrease} {brightness}",
                "({decrease}|приглушать) {light}",
                "{set} {darker}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "relative": "decrease",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Окей, сделаем темнее.",
                        "Окей, делаем темнее.",
                        "Окей, убавим яркость.",
                        "Убавляю яркость.",
                        "Меньше яркости. Окей."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "приглушать"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "relative": "decrease",
                "allowed_arg_variants": [
                    {
                        "type": "num"
                    },
                    {
                        "type": "num",
                        "unit": "unit.percent"
                    }
                ],
                "require_device_as_target": true,
                "applicable_types": [
                    "devices.types.light"
                ],
                "nlg": {
                    "variants": [
                        "Окей, сделаем темнее.",
                        "Окей, делаем темнее.",
                        "Окей, убавим яркость.",
                        "Убавляю яркость.",
                        "Меньше яркости. Окей."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_max} ({brightness}|{light})",
                "{set} (#яркий|#яркое) {light}",
                "{set} #ярко"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "value": "max",
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Окей, яркость на максимум.",
                        "Хорошо, яркость на максимум.",
                        "Хорошо. Максимум яркости.",
                        "Как скажете. Максимальная яркость."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set} (#ярким|#яркой)"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "value": "max",
                "nlg": {
                    "variants": [
                        "Окей, яркость на максимум.",
                        "Хорошо, яркость на максимум.",
                        "Хорошо. Максимум яркости.",
                        "Как скажете. Максимальная яркость."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_min_ext} ({brightness}|{light})",
                "{set} (#тусклый|#тусклое) {light}",
                "{set} (бледный|бледноватый|мрачный) {light_no_level}",
                "{set} #тускло"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "value": "min",
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Хорошо. Минимум яркости.",
                        "Как скажете. Минимальная яркость."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set} (#тусклой|#тусклым)"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "value": "min",
                "nlg": {
                    "variants": [
                        "Хорошо. Минимум яркости.",
                        "Как скажете. Минимальная яркость."
                    ]
                }
            }
        },
        {
            "bow_forms": [
              "{set_numeric} ({brightness}|{light})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": ["Меняю яркость."]
                }
            }
        },
        {
            "bow_forms": [
              "{set_numeric} {maybe_level}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "require_device_as_target": true,
                "nlg": {
                    "variants": ["Меняю яркость."]
                }
            }
        },
        {
            "bow_forms": [
                "{set_without_empty}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color",
                "required_arg": {
                  "type": "color"
                },
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": ["Меняю цвет."]
                }
            }
        },
        {
            "bow_forms": [
                "{set_object_mode_without_empty} {color}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color",
                "required_arg": {
                    "type": "color"
                },
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": ["Меняю цвет."]
                },
                "bonus": 30
            }
        },
        {
            "bow_forms": [
                "{set}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color",
                "required_arg": {
                  "type": "color"
                },
                "nlg": {
                    "variants": ["Меняю цвет."]
                }
            }
        },
        {
            "bow_forms": [
                "{set_object_mode} {color}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color",
                "required_arg": {
                    "type": "color"
                },
                "nlg": {
                    "variants": ["Меняю цвет."]
                },
                "bonus": 30
            }
        },
        {
            "bow_forms": [
                "{set_object_mode_without_empty} {mode} {color}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true,
                "bonus": 40
            }
        },
        {
            "bow_forms": [
                "{set_object_mode_without_empty} {mode}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true
            }
        },
        {
            "bow_forms": [
                "({turn_on}|{imitate}|{shine}|{work}|сделай) (подсветка|) {maybe_on_top_of_smart_speaker} {maybe_mode} ({like}|)",
                "{show} ({how} ({shine}|{works})|) {maybe_on_top_of_smart_speaker} {maybe_mode}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true,
                "require_smart_speakers": true,
                "bonus": 20,
                "bonus_if_matched_room": 1110
            }
        },
        {
            "bow_forms": [
                "({turn_on}|{imitate}|{shine}|{work}|сделай) (подсветка|) {maybe_on_top_of_smart_speaker} {maybe_mode} {color}",
                "{show} ({how} ({shine}|{works})|) {maybe_on_top_of_smart_speaker} {maybe_mode} {color}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true,
                "require_smart_speakers": true,
                "bonus": 60
            }
        },
        {
            "bow_forms": [
                "{turn_off} ({shining}|) {maybe_mode} {maybe_on_top_of_smart_speaker}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "replace_value_with": "inactive",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true,
                "require_smart_speakers": true,
                "bonus": 20,
                "bonus_if_matched_room": 1110
            }
        },
        {
            "bow_forms": [
                "{turn_off} {shining} ({on_top_panel}|{on_smart_speaker}|{on_top})"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "default_value": "inactive",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true,
                "require_smart_speakers": true,
                "bonus": 10
            }
        },
        {
            "bow_forms": [
                "{turn_off} {shining}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "default_value": "inactive",
                "replace_value_with": "inactive",
                "require_device_as_target": true,
                "require_smart_speakers": true,
                "bonus": 20
            }
        },
        {
            "bow_forms": [
                "{maybe_invert} {mode} ({shining}|) {maybe_on_top_of_smart_speaker}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "color_scene",
                "relative": "invert",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true,
                "require_smart_speakers": true,
                "require_value_with_relative": true,
                "bonus": 10,
                "bonus_if_matched_room": 1110
            }
        },
        {
            "bow_forms": [
                "{set_object_mode} {color} {warmer}",
                "{increase} {temperature} {color}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "temperature_k",
                "relative": "decrease",
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Включаю свет потеплее.",
                        "Окей, больше тёплого света.",
                        "Окей, больше тёплого."
                    ]
                },
                "bonus": 30
            }
        },
        {
            "bow_forms": [
                "{increase} цветовой {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "temperature_k",
                "relative": "decrease",
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Включаю свет потеплее.",
                        "Окей, больше тёплого света.",
                        "Окей, больше тёплого."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{decrease} цветовой {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "temperature_k",
                "relative": "increase",
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Включаю свет похолоднее.",
                        "Окей, больше холодного света.",
                        "Окей, больше холодного. "
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_object_mode} {color} {colder}",
                "{decrease} {temperature} {color}"
            ],
            "value": {
                "type": "devices.capabilities.color_setting",
                "instance": "temperature_k",
                "relative": "increase",
                "default_context": {
                    "device_type": "devices.types.light"
                },
                "nlg": {
                    "variants": [
                        "Включаю свет похолоднее.",
                        "Окей, больше холодного света.",
                        "Окей, больше холодного. "
                    ]
                },
                "bonus": 30
            }
        },
        {
            "bow_forms": [
                "({set_numeric_without_empty}|{heat_up_or_cool_down_to}) {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                    }
                ],
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "variants": [
                        "Делаю.",
                        "Меняю температуру."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "({set_numeric}|{heat_up_or_cool_down_to}) {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                    }
                ],
                "nlg": {
                    "variants": [
                        "Делаю.",
                        "Меняю температуру."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "({set_numeric_without_empty}|{heat_up_or_cool_down_to})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "required_arg": {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                },
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "variants": [
                        "Делаю.",
                        "Меняю температуру."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "({set_numeric}|{heat_up_or_cool_down_to})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "required_arg": {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                },
                "nlg": {
                    "variants": [
                        "Делаю.",
                        "Меняю температуру."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "({set_numeric}|{heat_up_or_cool_down_to})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "required_arg": {
                      "type": "num"
                },
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Делаю.",
                        "Меняю температуру."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_max_without_empty} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "value": "max",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "variants": [
                        "Ставлю самую высокую температуру.",
                        "Ставлю температуру на максимум."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_max} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "value": "max",
                "nlg": {
                    "variants": [
                        "Ставлю самую высокую температуру.",
                        "Ставлю температуру на максимум."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_min_without_empty} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "value": "min",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "variants": [
                        "Ставлю самую низкую температуру.",
                        "Ставлю температуру на минимум."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_min} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "value": "min",
                "nlg": {
                    "variants": [
                        "Ставлю самую низкую температуру.",
                        "Ставлю температуру на минимум."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_without_empty} {warmer} (|{temperature})",
                "{increase_without_empty} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "relative": "increase",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                    }
                ],
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "variants": [
                        "Окей, теплее.",
                        "Окей, сделаем теплее."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set} {warmer} (|{temperature})",
                "{increase} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "relative": "increase",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                    }
                ],
                "nlg": {
                    "variants": [
                        "Окей, теплее.",
                        "Окей, сделаем теплее."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_without_empty} {colder} (|{temperature})",
                "{decrease_without_empty} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "relative": "decrease",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                    }
                ],
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "variants": [
                        "Окей, прохладнее.",
                        "Окей, сделаем холоднее."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set} {colder} (|{temperature})",
                "{decrease} {temperature}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "temperature",
                "relative": "decrease",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius"
                    }
                ],
                "nlg": {
                    "variants": [
                        "Окей, прохладнее.",
                        "Окей, сделаем холоднее."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{increase} {humidity}",
                "{set} {more_humid}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "humidity",
                "relative": "increase",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "variants": [
                        "Окей, прибавим влажность.",
                        "Прибавляю влажность.",
                        "Больше влажности. Окей."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{decrease} {humidity}",
                "{set} {less_humid}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "humidity",
                "relative": "decrease",
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "variants": [
                        "Окей, убавим влажность.",
                        "Убавляю влажность.",
                        "Меньше влажности. Окей."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "({set_increase_without_empty}|выкрути|давай) {humidity} {max_ext}",
                "{set} (#влажный|#влажным) воздух",
                "{set} #влажно"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "humidity",
                "value": "max",
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "variants": [
                        "Окей, влажность на максимум.",
                        "Хорошо, влажность на максимум.",
                        "Хорошо. Максимум влажности.",
                        "Как скажете. Максимальная влажность."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "({turn_on_basic}|выкрути|поставь|{increase_basic}) (мощность|) {max_ext}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "humidity",
                "value": "max",
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "variants": [
                        "Окей, влажность на максимум.",
                        "Хорошо, влажность на максимум.",
                        "Хорошо. Максимум влажности.",
                        "Как скажете. Максимальная влажность."
                    ]
                },
                "require_device_as_target": true,
                "bonus": 10,
                "comment": "to beat 'включи увлажнитель на всю'  ->  toggle_on_off"
            }
        },
        {
            "bow_forms": [
                "{set_min} {humidity}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "humidity",
                "value": "min",
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "variants": [
                        "Окей, влажность на минимум.",
                        "Хорошо, влажность на минимум.",
                        "Хорошо. Минимум влажности.",
                        "Как скажете. Минимальная влажность."
                    ]
                }
            }
        },
        {
            "bow_forms": [
              "{set_numeric} {humidity}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "humidity",
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "variants": [
                        "Делаю.",
                        "Меняю влажность."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode"
            }
        },
        {
            "bow_forms": [
                "{set_mode} (|номер)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "required_arg": {
                    "type": "num"
                }
            },
            "comment": "The result mode value will be a number represented as a string, like 'one', 'two' or 'three'."
        },
        {
            "bow_forms": [
                "{set_mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat"
            },
            "comment": "Keeping it to prioritize thermostat instance over other instances"
        },
        {
            "bow_forms": [
                "{set} предыдущий ({mode}|)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "relative": "decrease",
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Включаю предыдущий режим.",
                        "Окей. Предыдущий режим.",
                        "Как скажете. Предыдущий режим.",
                        "Предыдущий режим, поехали."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set} следующий ({mode}|)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "relative": "increase",
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Включаю следующий режим.",
                        "Окей. Следующий режим.",
                        "Как скажете. Следующий режим.",
                        "Следующий режим, поехали."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{set} предыдущий {mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "relative": "decrease",
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Включаю предыдущий режим работы.",
                        "Окей. Предыдущий режим работы.",
                        "Как скажете. Предыдущий режим работы.",
                        "Предыдущий режим работы, поехали."
                    ]
                }
            },
            "comment": "Keeping it to prioritize thermostat instance over other instances"
        },
        {
            "bow_forms": [
                "{set} следующий {mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "relative": "increase",
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Включаю следующий режим работы.",
                        "Окей. Следующий режим работы.",
                        "Как скажете. Следующий режим работы.",
                        "Следующий режим работы, поехали."
                    ]
                }
            },
            "comment": "Keeping it to prioritize thermostat instance over other instances"
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} {fan_mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "value": "fan_only",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим вентиляции"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} {auto}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "value": "auto",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "автоматический режим"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} осушение"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "value": "dry",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим осушения"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} {eco}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "value": "eco",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "эко-режим"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} {heat}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "value": "heat",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "phrase": "switch_to_heat_mode"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} охлаждение"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat",
                "value": "cool",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                },
                "nlg": {
                    "phrase": "switch_to_cool_mode"
                }
            }
        },
        {
            "bow_forms": [
                "({set_max_without_empty}|{set_mode_without_empty} {high}) {fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "value": "high",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                }
            }
        },
        {
            "bow_forms": [
                "{set_max} {fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "value": "high"
            }
        },
        {
            "bow_forms": [
                "({set_min_without_empty}|{set_mode_without_empty} {low}) {fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "value": "low",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                }
            }
        },
        {
            "bow_forms": [
                "{set_min} {fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "value": "low"
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} средний {fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "value": "medium",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode_without_empty} {auto} {fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "value": "auto",
                "default_context": {
                    "device_type": "devices.types.thermostat"
                }
            }
        },
        {
            "bow_forms": [
                "{increase} {volume}",
                "{set} (громко<срав>|#более громкий|#менее тихий) (|{volume})",
                "{set} {volume} (сильно<срав>|#посильнее|#посильней)"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "volume",
                "relative": "increase",
                "require_device_as_target": true,
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "nlg": {
                    "variants": [
                        "Делаю громче.",
                        "Делаю погромче.",
                        "Окей, делаю погромче."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "{decrease} {volume}",
                "{set} (тихо<срав>|#более тихий|#менее громкий) (|{volume})",
                "{set} {volume} слабо<срав>"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "volume",
                "relative": "decrease",
                "require_device_as_target": true,
                "allowed_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "nlg": {
                    "variants": [
                        "Делаю тише.",
                        "Делаю потише.",
                        "Окей, делаю потише.",
                        "Окей, убавляю громкость."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "{set_numeric} {volume}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "volume",
                "require_device_as_target": true,
                "required_arg_variants": [
                    {
                      "type": "num"
                    },
                    {
                      "type": "num",
                      "unit": "unit.percent"
                    }
                ],
                "nlg": {
                    "variants": [
                        "Меняю громкость."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "{set_max} {volume}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "volume",
                "value": "max",
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Окей, громкость на максимум.",
                        "Хорошо, громкость на максимум.",
                        "Хорошо. Максимум громкости.",
                        "Как скажете. Максимальная громкость.",
                        "Хорошо. Максимум громкости.",
                        "Окей, максимум громкости."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "{set_min_ext} {volume}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "volume",
                "value": "min",
                "require_device_as_target": true,
                "nlg": {
                    "variants": [
                        "Окей, минимальная громкость.",
                        "Окей, громкость — минимальная.",
                        "Окей, минимум звука."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "{turn_off_toggle} звук"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "mute",
                "value": true,
                "nlg": {
                    "variants": ["Нажимаю кнопку «Mute»."],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "{turn_on_basic} звук"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "mute",
                "value": false,
                "require_device_as_target": true,
                "nlg": {
                    "variants": ["Нажимаю кнопку «Mute»."]
                }
            }
        },
        {
            "bow_forms": [
                "{turn_off_toggle}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "value": false
            }
        },
        {
            "bow_forms": [
                "{turn_on_basic}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "value": true
            }
        },
        {
            "bow_forms": [
                ""
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "relative": "invert"
            }
        },
        {
            "bow_forms": [
                ""
            ],
            "value": {
                "type": "devices.capabilities.custom.button",
                "value": true,
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "({set}|переходить) следующий канал"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "channel",
                "relative": "increase",
                "nlg": {
                    "variants": [
                        "Включаю следующий канал.",
                        "Включаю следующий.",
                        "Переключаю.",
                        "Окей, следующий канал.",
                        "Окей, переключаю."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "({set}|переходить|возвращаться|вернуться) предыдущий канал"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "channel",
                "relative": "decrease",
                "nlg": {
                    "variants": [
                        "Включаю предыдущий канал.",
                        "Включаю предыдущий.",
                        "Переключаю назад.",
                        "Возвращаюсь на предыдущий канал.",
                        "Окей, предыдущий канал.",
                        "Окей, переключаю назад."
                    ],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "({set}|переходить|возвращаться|вернуться) {tv_channel}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "channel",
                "required_arg": {
                    "type": "num"
                },
                "nlg": {
                    "variants": ["Переключаю."],
                    "text_only": true
                }
            }
        },
        {
            "bow_forms": [
                "({set_mode}|сварить) (|кофе)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "coffee_mode",
                "require_device_as_target": true,
                "default_context": {
                    "device_type": "devices.types.cooking.coffee_maker"
                }
            }
        },
        {
            "bow_forms": [
                "({set_mode}|{make_tea})"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "tea_mode",
                "infer_targets_from_capabilities": true,
                "default_context": {
                    "device_type": "devices.types.cooking.kettle"
                },
                "allowed_values": [
                    "black_tea",
                    "green_tea",
                    "puerh_tea",
                    "white_tea",
                    "oolong_tea",
                    "red_tea",
                    "herbal_tea",
                    "flower_tea"
                ]
            }
        },
        {
            "bow_forms": [
                "{turn_on_basic} {dishwashing}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                },
                "nlg": {
                    "variants": ["Включаю."]
                }
            }
        },
        {
            "bow_forms": [
                "{turn_off} {dishwashing}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                },
                "nlg": {
                    "variants": [
                        "Выключаю.",
                        "Окей, выключаем.",
                        "Окей, выключаю."
                    ]
                }
            }
        },
        {
            "bow_forms": [
                "{wash} посуда (|{mode})"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "dishwashing",
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                }
            }
        },
        {
            "bow_forms": [
                "{wash} стеклянный посуда",
                "{wash} посуда {mode} стекло",
                "{set} программа {pure_washing} стекло"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "dishwashing",
                "value": "glass",
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                },
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим мойки стекла"
                }
            }
        },
        {
            "bow_forms": [
                "{rinse} посуда",
                "{set} программа ополаскивание"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "dishwashing",
                "value": "pre_rinse",
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                },
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим ополаскивания"
                }
            }
        },
        {
            "bow_forms": [
                "({wash} посуда|{set_without_empty}) (|{mode}|{program}) (|{dishwashing})"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "dishwashing",
                "required_arg_variants": [
                    {
                      "type": "num",
                      "allowed_values": [45, 60, 75]
                    },
                    {
                      "type": "num",
                      "unit": "unit.temperature.celsius",
                      "allowed_values": [45, 60, 75]
                    }
                ],
                "default_value": "auto",
                "allowed_values": ["auto", "fast"],
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                }
            }
        },
        {
            "bow_forms": [
                "{set_mode} (направление|поток|обдув|струя) воздух (#из|)",
                "{set_mode} (направление|поток|обдув) (#из|)",
                "направлять (поток|обдув|струя|) (воздух|) (#из|)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "swing"
            }
        },
        {
            "bow_forms": [
                "{set_max} (|{mode})"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "max"
            }
        },
        {
            "bow_forms": [
                "{set_without_empty} программу (режим|)"
            ],
            "value": {
                "instance": "program",
                "require_device_as_target": true,
                "default_context": {
                    "device_type": "devices.types.cooking.multicooker"
                },
                "applicable_types": [
                    "devices.types.cooking.multicooker"
                ]
            }
        },
        {
            "bow_forms": [
                "{cook_verb}"
            ],
            "value": {
                "instance": "program",
                "require_device_as_target": true,
                "default_context": {
                    "device_type": "devices.types.cooking.multicooker"
                },
                "applicable_types": [
                    "devices.types.cooking.multicooker"
                ],
                "allowed_values": [
                    "boiling",
                    "baking",
                    "dessert",
                    "baby_food",
                    "fowl",
                    "frying",
                    "yogurt",
                    "cereals",
                    "macaroni",
                    "milk_porridge",
                    "steam",
                    "pasta",
                    "pizza",
                    "pilaf",
                    "sauce",
                    "soup",
                    "stewing",
                    "slow_cook",
                    "deep_fryer",
                    "bread",
                    "aspic",
                    "cheesecake"
                ]
            }
        },
        {
            "bow_forms": [
                "{set_min} (|{mode})"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "min"
            }
        },
        {
            "bow_forms": [
                "({turn_on_basic}|начинать|) {keep_warm_noun_phrase}",
                "(начинать|) {keep_warm_verb_phrase}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "keep_warm",
                "value": true
            }
        },
        {
            "bow_forms": [
                "({turn_off_toggle}|переставать) {keep_warm_noun_phrase}",
                "(переставать|#не) {keep_warm_verb_phrase}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "keep_warm",
                "value": false
            }
        },
        {
            "bow_forms": [
                "{set} {child_mode}",
                "(блокировать<!прич>|заблокировать<!прич>) (|управление)"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "controls_locked",
                "value": true,
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{turn_off_toggle} {child_mode}",
                "(переставать|#не) (блокировать) (|управление)",
                "разблокировать<!прич> (|управление)"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "controls_locked",
                "value": false,
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{unlock} {door_latch}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "central_lock",
                "value": false,
                "nlg": {
                    "phrase": "open_car"
                }
            }
        },
        {
            "bow_forms": [
                "{lock} {door_latch}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "central_lock",
                "value": true,
                "nlg": {
                    "phrase": "close_car"
                }
            }
        },
        {
            "bow_forms": [
                "{unlock} багажник"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "trunk",
                "value": true,
                "infer_targets_from_capabilities": true,
                "nlg": {
                    "phrase": "open_trunk"
                }
            }
        },
        {
            "bow_forms": [
                "{lock} багажник"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "trunk",
                "value": false,
                "infer_targets_from_capabilities": true
            }
        },
        {
            "bow_forms": [
                "{set} пауза",
                "приостанавливать"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "pause",
                "value": true,
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{turn_off_toggle} пауза",
                "(убирать|снимать) пауза"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "pause",
                "value": false,
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "(|{turn_on_basic}|активировать) сценарий"
            ],
            "value": {
                "type": "scenarios"
            }
        },
        {
            "bow_forms": [
                ""
            ],
            "value": {
                "type": "triggered_scenarios"
            }
        },
        {
            "bow_forms": [
                "{query_prefix} ({what}|) {mode} ({maybe_is}|{is_set})",
                "{check} {mode}"
            ],
            "value": {
                "request_type": "query",
                "target": "mode",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} ({what_word} {with}|{how}|{what_state}|{state})",
                "{check}"
            ],
            "value": {
                "request_type": "query",
                "target": "state",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} ({what_word} {with}|{how}|{what_state}|{state}) {maybe_level} ({purity}|) воздух",
                "{query_prefix} какой {maybe_level} {purity} воздух",
                "{check} {maybe_level} ({purity}|) воздух"
            ],
            "value": {
                "request_type": "query",
                "target": "air_quality",
                "allow_no_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} (какой|{what_word} {with}|{how}) ({state}|{level}) {purely_purity} ({just_particles}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "air_quality"
            }
        },
        {
            "bow_forms": [
                "({what}|{what_word} {with}|{how_much} (#осталось|)|) {maybe_level_or_percent}"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "infer_targets_from_rooms_and_households": true
            }
        },
        {
            "bow_forms": [
                "({what}|{how_much}|) {maybe_level_or_percent} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.range",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "({what_ch}|) {tv_channel} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.range",
                "instance": "channel",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true
            }
        },
        {
            "bow_forms": [
                "({what}|{how}|{how_much}) (#ярко|) (#светит|#светят|#горит|#горят)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.range",
                "instance": "brightness",
                "require_device_as_target": true
            },
            "comment": "This rule matches query phrases like 'Как ярко светит люстра' and 'Насколько ярко горит люстра'"
        },
        {
            "bow_forms": [
                "({what}|) {color_not_light} ({is_set}|#горит|#светит|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.color_setting",
                "instance": "color",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true
            }
        },
        {
            "bow_forms": [
                "{what} {light_no_level} ({is_set}|#горит|#светит|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.color_setting",
                "instance": "color",
                "infer_targets_from_capabilities": true,
                "infer_targets_from_rooms_and_households": true
            }
        },
        {
            "bow_forms": [
                "{on_or_off}"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} ({on_or_off}|{what_state}|{what_word} {with}) ({mode}|{program}|функция|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.toggle",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} (блокировать<прич>|заблокировать<прич>|разблокировать<прич>) (|управление)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "instance": "controls_locked",
                "type": "devices.capabilities.toggle",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} ({locked}|{unlocked}) багажник"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "instance": "trunk",
                "type": "devices.capabilities.toggle",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{query_prefix} ({locked}|{unlocked}) {door_latch_no_empty}"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "instance": "central_lock",
                "type": "devices.capabilities.toggle",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{what} (из|) ({mode}|{program}|) {is_set}"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "require_device_as_target": true
            },
            "comment": "This rule matches query phrases like 'Какой нагрев стоит на обогревателе' and 'Что за программа стоит на посудомойке'"
        },
        {
            "bow_forms": [
                "({what}|) (из|) {program} ((приготовления|готовки) (пищи|еды|)|) ({is_set}|#готовит|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "program",
                "applicable_types": [
                    "devices.types.cooking.multicooker"
                ],
                "require_device_as_target": true
            },
            "comment": "This rule matches query phrases like 'Программа приготовления пищи на мультиварке'"
        },
        {
            "bow_forms": [
                "({what}|) (из|) {mode} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "require_device_as_target": true
            },
            "comment": "This rule matches query phrases like 'Режим нагрева на обогревателе'"
        },
        {
            "bow_forms": [
                "({what}|) {input_source} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "input_source",
                "require_device_as_target": true
            },
            "comment": "This rule matches short mode query phrases like 'Какой источник сигнала на телике'"
        },
        {
            "bow_forms": [
                "({what}|) {program} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "program",
                "require_device_as_target": true
            },
            "comment": "This rule matches short mode query phrases like 'Какая программа на телике'"
        },
        {
            "bow_forms": [
                "({what}|) {swing} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "swing",
                "require_device_as_target": true
            },
            "comment": "This rule matches short mode query phrases like 'Какое направление воздуха на телике'"
        },
        {
            "bow_forms": [
                "({what}|) {fan_speed} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "fan_speed",
                "require_device_as_target": true
            },
            "comment": "This rule matches short mode query phrases like 'Какая скорость обдува на телике'"
        },
        {
            "bow_forms": [
                "({what}|) {work_speed} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "work_speed",
                "require_device_as_target": true
            },
            "comment": "This rule matches short mode query phrases like 'Какая скорость работы на телике'"
        },
        {
            "bow_forms": [
                "({what}|) {heat} ({is_set}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "capability",
                "type": "devices.capabilities.mode",
                "instance": "heat",
                "require_device_as_target": true
            },
            "comment": "This rule matches short mode query phrases like 'Какой нагрев на телике'"
        },
        {
            "bow_forms": [
                "{set_without_empty} время"
            ],
            "value": {
                "request_type": "action",
                "require_device_as_target": true,
                "flags": [
                    "do_not_recover_datetime_range"
                ],
                "require_time": true
            }
        },
        {
            "bow_forms": [
                "({is_it_long_before_stop}|{when_is_done}) (работать|доработать|отработать|работа|дело)"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "instance": "timer",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "({is_it_long_before_stop}|{when_is_done}) {cook_all} (еда|)",
                "{when_is_ready} еда"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "instance": "timer",
                "require_device_as_target": true,
                "applicable_types": ["devices.types.cooking"]
            }
        },
        {
            "bow_forms": [
                "({is_it_long_before_stop}|{when_is_done}) {cook_all} (кофе|{coffee_type}|)",
                "{when_is_ready} (кофе|{coffee_type})"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "instance": "timer",
                "require_device_as_target": true,
                "applicable_types": ["devices.types.cooking.coffee_maker"],
                "default_context": {
                    "device_type": "devices.types.cooking.coffee_maker"
                }
            }
        },
        {
            "bow_forms": [
                "({is_it_long_before_stop}|{when_is_done}) {cleaning}"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "instance": "timer",
                "require_device_as_target": true,
                "applicable_types": ["devices.types.vacuum_cleaner"]
            }
        },
        {
            "bow_forms": [
                "({is_it_long_before_stop}|{when_is_done}) {do_laundry} ({clothes}|)"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "instance": "timer",
                "require_device_as_target": true,
                "applicable_types": ["devices.types.washing_machine"],
                "default_context": {
                    "device_type": "devices.types.washing_machine"
                }
            }
        },
        {
            "bow_forms": [
                "({is_it_long_before_stop}|{when_is_done}) ({wash}|{pure_washing}) (посуда|)"
            ],
            "value": {
                "request_type": "query",
                "target": "property",
                "type": "devices.properties.float",
                "instance": "timer",
                "require_device_as_target": true,
                "applicable_types": ["devices.types.dishwasher"],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                }
            }
        }
    ],
    "instance": [
        {
            "forms": [
                "подсветка"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "backlight",
                "infer_targets_from_capabilities": true
            }
        },
        {
            "bow_forms": [
                "(ионизатор|ионизация|ионизирование) (воздух|)"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "ionization",
                "infer_targets_from_capabilities": true
            }
        },
        {
            "forms": [
                "вращение"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "oscillation"
            }
        },
        {
            "forms": [
                "звук"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "mute",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{keep_warm_noun_phrase}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "keep_warm"
            }
        },
        {
            "bow_forms": [
                "{child_mode}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "controls_locked",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{door_latch_no_empty}"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "central_lock"
            }
        },
        {
            "forms": [
                "багажник"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "trunk"
            }
        },
        {
            "forms": [
                "пауза"
            ],
            "value": {
                "type": "devices.capabilities.toggle",
                "instance": "pause",
                "require_device_as_target": true
            }
        },
        {
            "bow_forms": [
                "{work_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "work_speed"
            }
        },
        {
            "forms": [
                "очистка",
                "уборка",
                "чистка"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "cleanup_mode"
            }
        },
        {
            "bow_forms": [
                "{program}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "program"
            }
        },
        {
            "bow_forms": [
                "{input_source}",
                "hdmi"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "input_source",
                "infer_targets_from_capabilities": true
            }
        },
        {
            "bow_forms": [
                "{fan_speed}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "fan_speed"
            }
        },
        {
            "bow_forms": [
                "{heat}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "heat"
            }
        },
        {
            "bow_forms": [
                "{coffee_mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "coffee_mode"
            }
        },
        {
            "bow_forms": [
                "{tea_mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "tea_mode",
                "infer_targets_from_capabilities": true,
                "default_context": {
                    "device_type": "devices.types.cooking.kettle"
                }
            }
        },
        {
            "bow_forms": [
                "{swing}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "swing"
            }
        },
        {
            "bow_forms": [
                "{dishwashing}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "dishwashing",
                "infer_targets_from_capabilities": true,
                "applicable_types": [
                    "devices.types.dishwasher"
                ],
                "default_context": {
                    "device_type": "devices.types.dishwasher"
                }
            }
        },
        {
            "forms": [
                "термостат"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "instance": "thermostat"
            }
        },
        {
            "bow_forms": [
                "температура (охлаждения|нагрева|)",
                "градус (цельсия|фаренгейта|кельвина|)"
            ],
            "value": {
                "instance": "temperature"
            }
        },
        {
            "bow_forms": [
                "(гидростатический|атмосферный|) давление (вода|жидкость|воздух|газ|атмосфера|) (паскаль|бар|(миллиметр|сантиметр|метр|) (ртутный|водяной) столб|)"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "pressure"
            }
        },
        {
            "bow_forms": [
                "(электрический|) напряжение (ток|)"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "voltage"
            }
        },
        {
            "bow_forms": [
                "({consume}|) (электрический|) мощность (ток|)"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "power"
            }
        },
        {
            "bow_forms": [
                "({consume}|сила|) (электрический|) ток"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "amperage"
            }
        },
        {
            "forms": [
                "вода"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "water_level"
            }
        },
        {
            "forms": [
                "влажность"
            ],
            "value": {
                "instance": "humidity"
            }
        },
        {
            "bow_forms": [
                "{co2}"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "co2_level"
            }
        },
        {
            "bow_forms": [
                "{charge}",
                "{battery}",
                "{charge} {battery}"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "battery_level"
            }
        },
        {
            "bow_forms": [
                "открытость",
                "({opened}|{subopened})"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "open"
            }
        },
        {
            "bow_forms": [
                "(яркость|темнота|тьма)",
                "{light_no_level}",
                "(#темно|#светло|#ярко)"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "brightness"
            }
        },
        {
            "bow_forms": [
                "{volume_no_level}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "volume"
            }
        },
        {
            "bow_forms": [
                "{tv_channel}"
            ],
            "value": {
                "type": "devices.capabilities.range",
                "instance": "channel"
            }
        },
        {
            "bow_forms": [
                "{turn_on_noun}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true
            }
        },
        {
            "bow_forms": [
                "{turn_off_noun}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false
            }
        },
        {
            "bow_forms": [
                "{open_noun}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": true,
                "applicable_types": [
                    "devices.types.openable",
                    "devices.types.openable.curtain"
                ]
            }
        },
        {
            "bow_forms": [
                "{close_noun}"
            ],
            "value": {
                "type": "devices.capabilities.on_off",
                "instance": "on",
                "value": false,
                "applicable_types": [
                    "devices.types.openable",
                    "devices.types.openable.curtain"
                ]
            }
        },
        {
            "bow_forms": [
                "{particles_pm} 1 {maybe_percent}"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "pm1_density",
                "infer_targets_from_capabilities": true
            }
        },
        {
            "bow_forms": [
                "{particles_pm} 2 5 {maybe_percent}"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "pm2.5_density",
                "infer_targets_from_capabilities": true
            }
        },
        {
            "bow_forms": [
                "{particles_pm} 10 {maybe_percent}"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "pm10_density",
                "infer_targets_from_capabilities": true
            }
        },
        {
            "bow_forms": [
                "органический {particles}"
            ],
            "value": {
                "target": "property",
                "type": "devices.properties.float",
                "instance": "tvoc",
                "infer_targets_from_capabilities": true
            }
        }
    ],
    "action_value": [
        {
            "bow_forms": [
                "{fan_mode}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "fan_only",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим вентиляции"
                }
            }
        },
        {
            "bow_forms": [
                "{auto}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "auto",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "автоматический режим"
                }
            }
        },
        {
            "forms": [
                "осушение"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "dry",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим осушения"
                }
            }
        },
        {
            "bow_forms": [
                "{eco}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "eco",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "эко-режим"
                }
            }
        },
        {
            "bow_forms": [
                "{heat}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "heat",
                "nlg": {
                    "phrase": "switch_to_heat_mode"
                }
            }
        },
        {
            "forms": [
                "охлаждение"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "cool",
                "nlg": {
                    "phrase": "switch_to_cool_mode"
                }
            }
        },
        {
            "bow_forms": [
                "{high}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "high"
            }
        },
        {
            "forms": [
                "средний"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "medium"
            }
        },
        {
            "bow_forms": [
                "{low}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "low"
            }
        },
        {
            "bow_forms": [
                "(предварительный|) (нагрев|подогрев|разогрев)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "preheat",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим подогрева"
                }
            }
        },
        {
            "forms": [
                "турбо"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "turbo",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "турбо режим"
                }
            }
        },
        {
            "forms": [
                "быстрый"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "fast",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "быстрый режим"
                }
            }
        },
        {
            "forms": [
                "медленный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "slow",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "медленный режим"
                }
            }
        },
        {
            "forms": [
                "экспресс"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "express",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "экспресс-режим"
                }
            }
        },
        {
            "forms": [
                "тихий",
                "ночной"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "quiet",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "тихий режим"
                }
            }
        },
        {
            "forms": [
                "нормальный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "normal",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "нормальный режим"
                }
            }
        },
        {
            "forms": [
                "стандартный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "standard",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "стандартный режим"
                }
            }
        },
        {
            "forms": [
                "горизонтальный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "horizontal",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "горизонтальный режим"
                }
            }
        },
        {
            "forms": [
                "вертикальный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "vertical",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "вертикальный режим"
                }
            }
        },
        {
            "forms": [
                "неподвижный",
                "статичный",
                "фиксированный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "stationary",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "неподвижный режим"
                }
            }
        },
        {
            "forms": [
                "латте"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "latte"
            }
        },
        {
            "forms": [
                "капучино"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "cappuccino"
            }
        },
        {
            "forms": [
                "эспрессо"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "espresso"
            }
        },
        {
            "bow_forms": [
                "двойной эспрессо"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "double_espresso"
            }
        },
        {
            "forms": [
                "американо"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "americano"
            }
        },
        {
            "bow_forms": [
                "черный чай"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "black_tea"
            }
        },
        {
            "bow_forms": [
                "зеленый чай"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "green_tea"
            }
        },
        {
            "bow_forms": [
                "(|чай) (пуэр|пуер)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "puerh_tea"
            }
        },
        {
            "bow_forms": [
                "белый чай"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "white_tea"
            }
        },
        {
            "bow_forms": [
                "(|чай) (улун|улуун)"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "oolong_tea"
            }
        },
        {
            "bow_forms": [
                "красный чай"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "red_tea"
            }
        },
        {
            "bow_forms": [
                "травяной чай"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "herbal_tea"
            }
        },
        {
            "bow_forms": [
                "цветочный чай"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "flower_tea"
            }
        },
        {
            "bow_forms": [
                "(|программа) ополаскивание"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "pre_rinse",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим ополаскивания"
                }
            }
        },
        {
            "bow_forms": [
                "интенсивный"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "intensive",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "интенсивный режим"
                }
            }
        },
        {
            "bow_forms": [
                "{washing} стекло"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "glass",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим мойки стекла"
                }
            }
        },
        {
            "forms": [
                "вакуум"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "vacuum",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим вакуум"
                }
            }
        },
        {
            "forms": [
                "варка"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "boiling",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим варки"
                }
            }
        },
        {
            "forms": [
                "выпечка"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "baking",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим выпечки"
                }
            }
        },
        {
            "forms": [
                "десерт"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "dessert",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим десерта"
                }
            }
        },
        {
            "forms": [
                "детский питание"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "baby_food",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим детского питания"
                }
            }
        },
        {
            "forms": [
                "дичь"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "fowl",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим дичь"
                }
            }
        },
        {
            "forms": [
                "жарка"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "frying",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим жарки"
                }
            }
        },
        {
            "forms": [
                "йогурт"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "yogurt",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим йогурт"
                }
            }
        },
        {
            "forms": [
                "крупы"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "cereals",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим крупы"
                }
            }
        },
        {
            "forms": [
                "макароны"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "macaroni",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим макароны"
                }
            }
        },
        {
            "bow_forms": [
                "{milk_porridge}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "milk_porridge",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим молочная каша"
                }
            }
        },
        {
            "forms": [
                "мультиповар"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "multicooker",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим мультиповар"
                }
            }
        },
        {
            "forms": [
                "пар"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "steam",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим пар"
                }
            }
        },
        {
            "forms": [
                "паста"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "pasta",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим паста"
                }
            }
        },
        {
            "forms": [
                "пицца"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "pizza",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим пицца"
                }
            }
        },
        {
            "forms": [
                "плов"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "pilaf",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим плов"
                }
            }
        },
        {
            "forms": [
                "соус"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "sauce",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим соус"
                }
            }
        },
        {
            "forms": [
                "суп"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "soup",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим суп"
                }
            }
        },
        {
            "forms": [
                "тушение"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "stewing",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим тушение"
                }
            }
        },
        {
            "forms": [
                "томление"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "slow_cook",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим томление"
                }
            }
        },
        {
            "forms": [
                "фритюр"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "deep_fryer",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим фритюр"
                }
            }
        },
        {
            "forms": [
                "хлеб"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "bread",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим хлеб"
                }
            }
        },
        {
            "forms": [
                "холодец"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "aspic",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим холодец"
                }
            }
        },
        {
            "bow_forms": [
                "{cheesecake}"
            ],
            "value": {
                "type": "devices.capabilities.mode",
                "value": "cheesecake",
                "nlg": {
                    "phrase": "switch_to_mode",
                    "mode_name": "режим чизкейк"
                }
            }
        }
    ],
    "device_type": [
        {
            "forms": [
                "розетка",
                "розеточка"
            ],
            "value": "devices.types.socket"
        },
        {
            "forms": [
                "свет",
                "освещение"
            ],
            "value": "devices.types.light"
        },
        {
            "forms": [
                "переключатель",
                "выключатель"
            ],
            "value": "devices.types.switch"
        },
        {
            "forms": [
                "кондиционер"
            ],
            "use_synonyms": true,
            "value": "devices.types.thermostat.ac"
        },
        {
            "forms": [
                "телевизор"
            ],
            "use_synonyms": true,
            "value": "devices.types.media_device.tv"
        },
        {
            "forms": [
                "ресивер"
            ],
            "use_synonyms": true,
            "value": "devices.types.media_device.receiver"
        },
        {
            "forms": [
                "приставка",
                "тв приставка"
            ],
            "use_synonyms": true,
            "value": "devices.types.media_device.tv_box"
        },
        {
            "forms": [
                "чайник",
                "чайничек"
            ],
            "value": "devices.types.cooking.kettle"
        },
        {
            "forms": [
                "шторы"
            ],
            "use_synonyms": true,
            "value": "devices.types.openable.curtain"
        },
        {
            "forms": [
                "очиститель воздуха"
            ],
            "use_synonyms": true,
            "value": "devices.types.purifier"
        },
        {
            "forms": [
                "пылесос"
            ],
            "use_synonyms": true,
            "value": "devices.types.vacuum_cleaner"
        },
        {
            "forms": [
                "кофеварка"
            ],
            "use_synonyms": true,
            "value": "devices.types.cooking.coffee_maker"
        },
        {
            "forms": [
                "увлажнитель воздуха"
            ],
            "use_synonyms": true,
            "value": "devices.types.humidifier"
        },
        {
            "forms": [
                "стиральная машина"
            ],
            "use_synonyms": true,
            "value": "devices.types.washing_machine"
        },
        {
            "forms": [
                "авто",
                "автомобиль",
                "машина",
                "тачка"
            ],
            "value": "devices.types.remote_car"
        },
        {
            "forms": [
                "посудомойка"
            ],
            "use_synonyms": true,
            "value": "devices.types.dishwasher"
        },
        {
            "forms": [
                "мультиварка"
            ],
            "use_synonyms": true,
            "value": "devices.types.cooking.multicooker"
        },
        {
            "forms": [
                "холодильник"
            ],
            "value": "devices.types.refrigerator"
        },
        {
            "forms": [
                "утюг"
            ],
            "use_synonyms": true,
            "value": "devices.types.iron"
        },
        {
            "forms": [
                "вентилятор"
            ],
            "use_synonyms": true,
            "value": "devices.types.fan"
        },
        {
            "forms": [
                "сенсор",
		        "датчик"
            ],
            "value": "devices.types.sensor"
        },
        {
            "forms": [
                "кормушка",
                "умный кормушка"
            ],
            "value": "devices.types.pet_feeder"
        }
    ],
    "group_type": [
        {
            "forms": [
                "группа",
                "группка"
            ]
        }
    ],
    "room_type": [
        {
            "forms": [
                "комната",
                "комнатка"
            ]
        }
    ],
    "household_type": [
        {
            "forms": [
                "домохозяйство",
                "домовладение",
                "дом"
            ]
        }
    ],
    "room": [
        {
            "exact_forms": [
                "везде",
                "всюду",
                "повсюду",
                "дома",
                "в доме",
                "весь дом",
                "в доме всем",
                "во всем доме",
                "в квартире",
                "вся квартира",
                "в квартире всей",
                "во всей квартире",
                "все комнаты",
                "в комнатах всех",
                "во всех комнатах"
            ],
            "value": "everywhere"
        }
    ],
    "multiroom_all_devices": [
        {
            "exact_forms": [
                "на все колонки",
                "на колонки все",
                "на всех колонки",
                "на всех колонках",
                "во всех колонках",
                "на колонках всех",
                "в колонках всех",
                "на всех устройствах",
                "во всех устройствах",
                "на устройствах всех",
                "в устройствах всех",
                "на все устройства",
                "на устройства все",
                "на всем",
                "на всех станциях",
                "во всех станциях",
                "на станциях всех",
                "на всех яндекс станциях",
                "на всех наших колонках",
                "на колонках наших всех",
                "во всём доме",
                "по всему дому"
            ],
            "value": "everywhere"
        }
    ],
    "unit": [
        {
            "forms": [
                "процент"
            ],
            "value": "unit.percent"
        },
        {
            "forms": [
                "градус",
                "градус цельсий",
                "цельсий"
            ],
            "value": "unit.temperature.celsius"
        }
    ],
    "complex_arg": [
        {
            "exact_forms": [
                "на четверть",
                "на 1 четверть",
                "на 1 4",
                "на 1 4 часть"
            ],
            "value": {
                "arg_num": 25,
                "unit": "unit.percent"
            }
        },
        {
            "exact_forms": [
                "на треть",
                "на 1 треть",
                "на 1 3",
                "на 1 3 часть"
            ],
            "value": {
                "arg_num": 33,
                "unit": "unit.percent"
            }
        },
        {
            "exact_forms": [
                "наполовину",
                "наполовинку",
                "на половину",
                "на половинку",
                "на 1 2",
                "на 1 2 часть"
            ],
            "value": {
                "arg_num": 50,
                "unit": "unit.percent"
            }
        }
    ],
    "common": [
        {
            "exact_forms": [
                "а",
                "алис",
                "алиса",
                "алисонька",
                "алисочка",
                "бля",
                "блядь",
                "блять",
                "будь добра",
                "будь так добра",
                "будь любезна",
                "будь так любезна",
                "быстрее",
                "быстро",
                "в настоящее время",
                "в данный момент",
                "вот",
                "глухая",
                "давай",
                "для",
                "дорогая",
                "дура",
                "дурочка",
                "ебаная",
                "ебаные",
                "ебаный",
                "ебанная",
                "ебанные",
                "ебанный",
                "ей",
                "ему",
                "еще",
                "ещё",
                "еб твою мать",
                "ёб твою мать",
                "же",
                "задолбала",
                "заебала",
                "заколебала",
                "заебись",
                "здесь",
                "знать",
                "идиотка",
                "им",
                "именно сейчас",
                "интересует",
                "к",
                "ка",
                "какая то",
                "короче",
                "который",
                "которая",
                "которое",
                "ли",
                "меня",
                "мне",
                "мое",
                "моего",
                "моей",
                "мои",
                "моих",
                "моя",
                "можешь",
                "на данный момент",
                "нам",
                "нас",
                "наш",
                "наша",
                "нашего",
                "нашей",
                "нашем",
                "наших",
                "на нашей",
                "на нашем",
                "на наших",
                "на этой",
                "на этом",
                "на этих",
                "на моей",
                "на моем",
                "на моих",
                "на хер",
                "на хуй",
                "нахер",
                "нахера",
                "нахуй",
                "нахуя",
                "надо",
                "назвать",
                "назови",
                "наконец",
                "него",
                "ней",
                "нее",
                "нем",
                "немедленно",
                "ним",
                "ними",
                "них",
                "ну",
                "нужно",
                "окей алиса",
                "окей яндекс",
                "оглохла",
                "определи",
                "определить",
                "ответить",
                "ответь",
                "охерела",
                "охренела",
                "охуела",
                "пизда",
                "пизде",
                "пиздец",
                "подскажи",
                "подсказать",
                "пожалуйста",
                "помоги",
                "помочь",
                "посмотреть",
                "посмотри",
                "привет",
                "приготовь",
                "проверить",
                "проверь",
                "продиктуй",
                "просто",
                "прямо",
                "пускай",
                "пусть",
                "работаешь",
                "расскажи",
                "рассказать",
                "ровно",
                "ровно сейчас",
                "с",
                "со",
                "свои",
                "свой",
                "сделай так чтобы",
                "сделать так чтобы",
                "сейчас",
                "скажи",
                "сказал",
                "сказала",
                "сказали",
                "сказать",
                "слабоумная",
                "слушай",
                "слушай алиса",
                "слушай яндекс",
                "сможешь",
                "сука",
                "сучка",
                "так",
                "там",
                "твоей",
                "твоем",
                "твоих",
                "твой",
                "то",
                "тут",
                "ты",
                "тебе",
                "тебя",
                "тупая",
                "тупо",
                "тупой",
                "тупые",
                "у меня",
                "у нас",
                "у моего",
                "у моей",
                "у моих",
                "у нашего",
                "у нашей",
                "у наших",
                "у этого",
                "у этой",
                "у этих",
                "уже",
                "узнай",
                "узнать",
                "уточни",
                "уточнить",
                "хер",
                "хера",
                "херовая",
                "херово",
                "херовые",
                "херовый",
                "хорошая",
                "хочу",
                "хуйня",
                "что ли",
                "что за хуйня",
                "что сказал",
                "что сказала",
                "чтобы",
                "эй",
                "эта",
                "этот",
                "эти",
                "я",
                "яндекс"
            ],
            "forms": [
                "дом",
                "квартира",
                "мой"
            ]
        }
    ],
    "conjunction": [
        {
            "exact_forms": [
                "и"
            ]
        }
    ],
    "preposition": [
        {
            "exact_forms": [
                "в",
                "во",
                "на",
                "по",
                "у"
            ]
        }
    ],
    "special_mark": [
        {
            "exact_forms": [
                "весь",
                "все",
                "всю"
            ],
            "value": "all"
        }
    ]
}
