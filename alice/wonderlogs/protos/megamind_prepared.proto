package NAlice.NWonderlogs;

import "alice/megamind/protos/speechkit/request.proto";
import "alice/megamind/protos/speechkit/response.proto";

import "mapreduce/yt/interface/protos/extension.proto";

message TMegamindPrepared {
    option (NYT.default_field_flags) = SERIALIZATION_YT;

    message TError {
        option (NYT.default_field_flags) = SERIALIZATION_YT;

        enum EProcess {
            P_UNDEFINED = 0;
            P_MEGAMIND_REQUEST_RESPONSE_MAPPER = 1;
            P_MEGAMIND_PREPARED_REDUCER = 2;
        }

        enum EReason {
            R_UNDEFINED = 0;
            R_INVALID_VALUE = 1;
            R_FAILED_CONVERT_YSON_TO_JSON = 2;
            R_FAILED_CONVERT_JSON_TO_PROTO = 3;
            R_CONTAINS_UNKNOWN_FIELDS = 4;
            R_DIFFERENT_VALUES = 5;
        }

        optional EProcess Process = 1 [json_name = "process", (NYT.column_name) = "process"];
        optional EReason Reason = 2 [json_name = "reason", (NYT.column_name) = "reason"];
        optional string Message = 3 [json_name = "message", (NYT.column_name) = "message"];
        optional string Uuid = 4 [json_name = "uuid", (NYT.column_name) = "uuid"];
        optional string MessageId = 5 [json_name = "message_id", (NYT.column_name) = "message_id"];
        optional string RequestId = 6 [json_name = "request_id", (NYT.column_name) = "request_id"];
        optional string SetraceUrl = 7 [json_name = "setrace_url", (NYT.column_name) = "setrace_url"];
    }

    message TEnvironment {
        option (NYT.default_field_flags) = SERIALIZATION_YT;

        optional string Environment = 1 [json_name = "environment", (NYT.column_name) = "environment"];
        optional string Provider = 2 [json_name = "provider", (NYT.column_name) = "provider"];
    }

    message TMegamindRequestResponse {
        option (NYT.default_field_flags) = SERIALIZATION_YT;

        optional string Uuid = 1 [json_name = "uuid", (NYT.column_name) = "uuid"];
        optional string MessageId = 2 [json_name = "message_id", (NYT.column_name) = "message_id"];
        optional string RequestId = 3 [json_name = "megamind_request_id", (NYT.column_name) = "megamind_request_id"];
        optional string ResponseId = 4 [json_name = "megamind_response_id", (NYT.column_name) = "megamind_response_id"];
        optional TSpeechKitRequestProto SpeechKitRequest = 5 [json_name = "speechkit_request", (NYT.column_name) = "speechkit_request"];
        optional TSpeechKitResponseProto SpeechKitResponse = 6 [json_name = "speechkit_response", (NYT.column_name) = "speechkit_response"];
        optional uint64 TimestampLogMs = 7 [json_name = "timestamp_log_ms", (NYT.column_name) = "timestamp_log_ms"];
        optional TEnvironment Environment = 8 [json_name = "environment", (NYT.column_name) = "environment"];
        optional bool RealMessageId = 9 [json_name = "real_message_id", (NYT.column_name) = "real_message_id"];
    }

    optional string Uuid = 1 [json_name = "uuid", (NYT.column_name) = "uuid"];
    optional string MessageId = 2 [json_name = "message_id", (NYT.column_name) = "message_id"];
    optional TSpeechKitResponseProto SpeechkitResponse = 3 [json_name = "speechkit_response", (NYT.column_name) = "speechkit_response"];
    optional TSpeechKitRequestProto SpeechkitRequest = 4 [json_name = "speechkit_request", (NYT.column_name) = "speechkit_request"];
    optional bool PresentInUniproxyLogs = 5 [json_name = "present_in_uniproxy_logs", (NYT.column_name) = "present_in_uniproxy_logs"];
    optional uint64 TimestampLogMs = 6 [json_name = "timestamp_log_ms", (NYT.column_name) = "timestamp_log_ms"];
    optional TEnvironment Environment = 7 [json_name = "environment", (NYT.column_name) = "environment"];
    optional bool RealMessageId = 8 [json_name = "real_message_id", (NYT.column_name) = "real_message_id"];
}
